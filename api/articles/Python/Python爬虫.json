{"title":"Python爬虫","uid":"33e145189cb2c9be32b78fb749fd41d4","slug":"Python/Python爬虫","date":"2022-08-30T03:30:00.000Z","updated":"2022-11-02T12:41:31.515Z","comments":true,"path":"api/articles/Python/Python爬虫.json","keywords":null,"cover":"/images/cover/3.jpg","content":"<h1 id=\"Python爬虫\"><a href=\"#Python爬虫\" class=\"headerlink\" title=\"Python爬虫\"></a>Python爬虫</h1><h2 id=\"什么是爬虫：\"><a href=\"#什么是爬虫：\" class=\"headerlink\" title=\"什么是爬虫：\"></a>什么是爬虫：</h2><p><strong>通过编写程序，模拟浏览器上网，然后让其去互联网上抓取数据的过程。</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>是一种自动获取网页数据信息的爬虫程序，是网站搜索引擎的重要组成部分。一般人能访问到的网页，爬虫也都能抓取。所谓的爬虫抓取，就是模拟人类访问目标网站。但和普通人访问方式不同，爬虫是可以按照一定的规则，自动的采集数据新。</p></blockquote>\n<h2 id=\"爬虫的价值：\"><a href=\"#爬虫的价值：\" class=\"headerlink\" title=\"爬虫的价值：\"></a>爬虫的价值：</h2><p><strong>在互联网中，数据是无价之宝，一切皆为数据，谁拥有大量有用 的数据，谁就拥有了决策的主动权。</strong>网络爬虫的应用领域很多，eg：爬取需要的数据进行统计、出行类软件可以利用爬虫抢票、整理聚合手机平台信息进行比较，数据分析、爬取个人信用信息。企业或政府利用爬取的数据，采用数据挖掘的相关方法，发掘用户讨论的内容、实行事件监测、舆情引导等。</p>\n<h2 id=\"爬虫的原理：\"><a href=\"#爬虫的原理：\" class=\"headerlink\" title=\"爬虫的原理：\"></a>爬虫的原理：</h2><p><strong>爬虫在使用场景中的分类分为以下4种。</strong></p>\n<ol>\n<li><p>通用网络爬虫</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>又称全网爬虫，爬取对象由一批种子URL扩充到整个Web，主要由搜索引擎或大型Web服务提供使商用。</p></blockquote>\n<p>抓取系统重要组成部分，抓取的是一整张页面的数据。</p>\n</li>\n<li><p>聚焦网络爬虫</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>又称主题网络爬虫，其最大的特点是只选择性地爬取与预设的主题相关的页面。</p></blockquote>\n<p>是建立在通用网络爬虫的基础之上的，抓取的是页面中特定的局部内容。</p>\n</li>\n<li><p>增量式网络爬虫</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>只对已经下载玩野采取增量式更新，或只怕去新产生的及已经发生变化的网页，这种机制能够在某种程度上保证爬取的页面尽可能的新。</p></blockquote>\n<p>检测网站中有数据更新的情况，只会抓取网站中最新更新出来的数据。</p>\n</li>\n<li><p>深层网络爬虫</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>指大部分内容无法通过静态链接获取，隐藏在表单后的，需要用户提交关键词后才能获得Web页面，如一些登录才可见的网页。</p></blockquote>\n</li>\n</ol>\n<h2 id=\"反爬机制：\"><a href=\"#反爬机制：\" class=\"headerlink\" title=\"反爬机制：\"></a>反爬机制：</h2><p>门户网站，可以通过制定相应的策略或者技术手段，防止爬虫程序进行网站数据的被爬取。</p>\n<h2 id=\"爬取策略：\"><a href=\"#爬取策略：\" class=\"headerlink\" title=\"爬取策略：\"></a>爬取策略：</h2><p>爬虫程序可以通过制定相关的策略或者技术手段，破解门户网站中具备的反爬机制，从而获取数据。</p>\n<h2 id=\"robots-txt协议：\"><a href=\"#robots-txt协议：\" class=\"headerlink\" title=\"robots.txt协议：\"></a>robots.txt协议：</h2><p>该协议不是一份规范，只是一个约定俗成的协议。爬虫应当遵守这份协议，否则很可能会被万丈所有者封禁IP，甚至网站所有者会采取进一步法律行动。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>著名的360的爬虫之争为案例</p></blockquote>\n<h2 id=\"http协议：\"><a href=\"#http协议：\" class=\"headerlink\" title=\"http协议：\"></a>http协议：</h2><p>就是服务器和客户端进行数据交互的一种形式。</p>\n<p>常用的请求偷头信息：</p>\n<ul>\n<li>User-Agent：请求载体身份标识。</li>\n<li>Connection：请求完毕后，是断开连接还是保持连接。</li>\n</ul>\n<p>常用响应头信息：</p>\n<ul>\n<li>Content-Type：服务器响应回客户端的数据类型。</li>\n</ul>\n<p>https协议：</p>\n<ul>\n<li>安全的超文本传输协议</li>\n</ul>\n<p>加密方式：</p>\n<ul>\n<li>对称秘钥加密</li>\n<li>非对称秘钥加密</li>\n<li>证书秘钥加密</li>\n</ul>\n<h1 id=\"requests模块\"><a href=\"#requests模块\" class=\"headerlink\" title=\"requests模块\"></a>requests模块</h1><h2 id=\"request模块是什么？\"><a href=\"#request模块是什么？\" class=\"headerlink\" title=\"request模块是什么？\"></a>request模块是什么？</h2><p>python中原生的一款基于网络请求的模块</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在python内置模块的基础上进行了高度的封装，从而使得python进行网络请求时，变得人性化，使用Requests可以轻而易举的完成浏览器可有的任何操作。</p></blockquote>\n<p>作用：模拟浏览器向服务器发请求。</p>\n<h2 id=\"requests的安装\"><a href=\"#requests的安装\" class=\"headerlink\" title=\"requests的安装\"></a>requests的安装</h2><pre class=\"line-numbers language-pip\" data-language=\"pip\"><code class=\"language-pip\">pip install requests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"http请求类型\"><a href=\"#http请求类型\" class=\"headerlink\" title=\"http请求类型\"></a>http请求类型</h2><p>有4种请求类型：</p>\n<ol>\n<li>PUT</li>\n<li>DELETE</li>\n<li>HEAD</li>\n<li>OPTIONS</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>‘https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>timeline<span class=\"token punctuation\">.</span>json’<span class=\"token punctuation\">)</span>                                <span class=\"token comment\"># GET请求</span>\nrequests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>“http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>httpbin<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>post”<span class=\"token punctuation\">)</span>                                        <span class=\"token comment\"># POST请求</span>\nrequests<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>“http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>httpbin<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>put”，data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># PUT请求</span>\nrequests<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>“http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>httpbin<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>delete”<span class=\"token punctuation\">)</span>                                    <span class=\"token comment\"># DELETE请求</span>\nrequests<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span>“http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>httpbin<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>get”<span class=\"token punctuation\">)</span>                                         <span class=\"token comment\"># HEAD请求</span>\nrequests<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">(</span>“http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>httpbin<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>get” <span class=\"token punctuation\">)</span>                                     <span class=\"token comment\"># OPTIONS请求</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"使用流程-x2F-编码流程\"><a href=\"#使用流程-x2F-编码流程\" class=\"headerlink\" title=\"使用流程&#x2F;编码流程\"></a>使用流程&#x2F;编码流程</h2><ol>\n<li>指定URL</li>\n<li>基于requests模块<strong>发送请求</strong></li>\n<li><strong>获取响应</strong>对象中的<strong>数据</strong>值</li>\n<li>持久化存储</li>\n</ol>\n<h1 id=\"第一个简单的爬虫程序\"><a href=\"#第一个简单的爬虫程序\" class=\"headerlink\" title=\"第一个简单的爬虫程序\"></a>第一个简单的爬虫程序</h1><p>使用request模块实现一个简单的网页采集。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><h3 id=\"指定url\"><a href=\"#指定url\" class=\"headerlink\" title=\"指定url\"></a>指定url</h3><p>如下的问号其实可以保留也可以不保留。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#指定url</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.sogou.com/web?'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"User-Agent伪装\"><a href=\"#User-Agent伪装\" class=\"headerlink\" title=\"User-Agent伪装\"></a>User-Agent伪装</h3><p>这一步需要用浏览器在开发者工具中查看自己本机的User-Agent。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#UA伪装</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/x.x (Macintosh; Intel Mac OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x Safari/xxx.xx'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"响应发起请求\"><a href=\"#响应发起请求\" class=\"headerlink\" title=\"响应发起请求\"></a>响应发起请求</h3><p>get请求返回的是一个response响应对象。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#获取请求响应</span>\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">,</span>params <span class=\"token operator\">=</span> param<span class=\"token punctuation\">,</span>headers <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">)</span> <span class=\"token comment\">#get返回一个响应对象</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"获取响应数据\"><a href=\"#获取响应数据\" class=\"headerlink\" title=\"获取响应数据\"></a>获取响应数据</h3><p>获取字符串形式的响应数据，也就是获取text的格式的响应数据。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">page_text <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>text <span class=\"token comment\">#获取字符串形式的响应数据</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"持久化储存\"><a href=\"#持久化储存\" class=\"headerlink\" title=\"持久化储存\"></a>持久化储存</h3><p>这一步就是最后的操作了，把采集到的网页页面元素保存下来。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span>\n    fp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>page_text<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\n<span class=\"token comment\">#指定url</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.sogou.com/web?'</span>\n<span class=\"token comment\">#UA伪装</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/x.x (Macintosh; Intel Mac OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x Safari/xxx.xx'</span>\n<span class=\"token punctuation\">&#125;</span>\n\nkw <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个关键词: \"</span><span class=\"token punctuation\">)</span>\nparam <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'query'</span><span class=\"token punctuation\">:</span>kw\n<span class=\"token punctuation\">&#125;</span>\nfileName <span class=\"token operator\">=</span> kw<span class=\"token operator\">+</span><span class=\"token string\">'.html'</span>\n<span class=\"token comment\">#获取请求响应</span>\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">,</span>params <span class=\"token operator\">=</span> param<span class=\"token punctuation\">,</span>headers <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">)</span> <span class=\"token comment\">#get放回一个响应对象</span>\npage_text <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>text <span class=\"token comment\">#获取字符串形式的响应数据</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span>\n    fp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>page_text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span><span class=\"token string\">'save successfully'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"某度翻译破解\"><a href=\"#某度翻译破解\" class=\"headerlink\" title=\"某度翻译破解\"></a>某度翻译破解</h1><p><strong>在pycharm中实现直接输入要翻译的英语单词，终获得翻译结果并且保存下来。</strong></p>\n<h2 id=\"指定url-1\"><a href=\"#指定url-1\" class=\"headerlink\" title=\"指定url\"></a>指定url</h2><p>利用浏览器的开发工具进行数据抓包，在XHP页面获取Ajax实际请求地址。</p>\n<p>切换到Headers找到请求，可以看到请求的url、请求方式和返回的数据类型都有了。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 指定url</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://fanyi.baidu.com/sug'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"UA伪装\"><a href=\"#UA伪装\" class=\"headerlink\" title=\"UA伪装\"></a>UA伪装</h2><p><strong>让爬虫对应的请求载体身份标识伪装成某一款浏览器。</strong><br>方法：将对应的User-Agent封装到一个字典中。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># UA伪装</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/x.x (Macintosh; Intel Mac OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x Safari/xxx.xx'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"POST请求参数处理\"><a href=\"#POST请求参数处理\" class=\"headerlink\" title=\"POST请求参数处理\"></a>POST请求参数处理</h2><p>在XHP页面获取Ajax实际相关参数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># post请求参数处理（同get请求一致）</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'kw'</span><span class=\"token punctuation\">:</span> words\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"请求发送\"><a href=\"#请求发送\" class=\"headerlink\" title=\"请求发送\"></a>请求发送</h2><p>基于requests发送请求，通过前面抓包得到的信息我们得到了，它的请求方式为post请求，这里我们使用requests模块中post()方法来发送请求</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 请求发送</span>\nresponce <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"获取响应数据-1\"><a href=\"#获取响应数据-1\" class=\"headerlink\" title=\"获取响应数据\"></a>获取响应数据</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 获取响应数据：json()方法放回的是obj（确认了响应数据是json类型才可以用json()方法）</span>\nresult <span class=\"token operator\">=</span> responce<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回一个obj</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"进行持久化存储\"><a href=\"#进行持久化存储\" class=\"headerlink\" title=\"进行持久化存储\"></a>进行持久化存储</h2><p>默认使用的编码是ASCII（不包含中文），而中文是Unicode编码。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 进行持久化存储</span>\nfp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">)</span>\njson<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> fp<span class=\"token operator\">=</span>fp<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># json()返回的obj中有中文 所以不能用ASCII解码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"完整代码-1\"><a href=\"#完整代码-1\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n\n<span class=\"token comment\"># 指定url</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://fanyi.baidu.com/sug'</span>\n\n<span class=\"token comment\"># UA伪装</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/x.x (Macintosh; Intel Mac OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x Safari/xxx.xx'</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 输入翻译的词</span>\nwords <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入要翻译的英语单词: '</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># post请求参数处理（同get请求一致）</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'kw'</span><span class=\"token punctuation\">:</span> words\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># 请求发送</span>\nresponce <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n\nfileName <span class=\"token operator\">=</span> words <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span>\n\n<span class=\"token comment\"># 获取响应数据：json()方法放回的是obj（确认了响应数据是json类型才可以用json()方法）</span>\nresult <span class=\"token operator\">=</span> responce<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回一个obj</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'翻译结果如下:'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 打印返回的obj结果</span>\n\n<span class=\"token comment\"># 进行持久化存储</span>\nfp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">)</span>\njson<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> fp<span class=\"token operator\">=</span>fp<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># json()返回的obj中有中文 所以不能用ASCII解码</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'save over！'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"正则表达式模块\"><a href=\"#正则表达式模块\" class=\"headerlink\" title=\"正则表达式模块\"></a>正则表达式模块</h1><p><strong>Python通过自带的re模块来支持正则表达式</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>先将正则表达式的String编译为“Pattern”实例</li>\n<li>使用Pattern实例处理结文本并且获得匹配结果（一个Match实例）</li>\n<li>使用Match实例获得信息</li>\n</ol></blockquote>\n<h2 id=\"re模块常用的方法\"><a href=\"#re模块常用的方法\" class=\"headerlink\" title=\"re模块常用的方法\"></a>re模块常用的方法</h2><table>\n<thead>\n<tr>\n<th align=\"left\">方法名</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">compile</td>\n<td align=\"left\">将正则表达式String转化为Pattern匹配对象。</td>\n</tr>\n<tr>\n<td align=\"left\">match</td>\n<td align=\"left\">将输入的String从头开始对输入的正则表达式进行匹配，如果遇到无法匹配的字符或到达String的末尾，则立即放回None，否则获取匹配结果。</td>\n</tr>\n<tr>\n<td align=\"left\">search</td>\n<td align=\"left\">将输入的整个String进行扫描，对输入的正则表达式进行匹配，并获取匹配结果，如果没有匹配结果，则返回None。</td>\n</tr>\n<tr>\n<td align=\"left\">split</td>\n<td align=\"left\">以能够匹配的String作为分隔符，将String分割后返回一个列表。</td>\n</tr>\n<tr>\n<td align=\"left\">findall</td>\n<td align=\"left\">搜索整个String，返回一个包含全部能匹配子串的列表。</td>\n</tr>\n<tr>\n<td align=\"left\">finditer</td>\n<td align=\"left\">与findall方法的作用类似，以迭代器的形式返回结果。</td>\n</tr>\n<tr>\n<td align=\"left\">sub</td>\n<td align=\"left\">使用指定内容替换字符串中匹配的每一个子串内容。</td>\n</tr>\n</tbody></table>\n<h3 id=\"compile方法\"><a href=\"#compile方法\" class=\"headerlink\" title=\"compile方法\"></a>compile方法</h3><p><strong>将正则表达式的字符串转化为Pattern匹配对象</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>flags<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Pattern</td>\n<td>接收str，表示需要转换的正则表达式的字符串。无默认值。</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>接收str，表示匹配的模式，取值为运算符”|”时表示同时生效，如re.I|re.M。默认为0。</td>\n</tr>\n</tbody></table>\n<h3 id=\"search方法\"><a href=\"#search方法\" class=\"headerlink\" title=\"search方法\"></a>search方法</h3><p><strong>该方法将输入的整个字符串进行扫描，并对输入的正则表达式进行匹配，若无匹配的字符，则立即返回None，否则获取匹配结果。</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>string<span class=\"token punctuation\">,</span>flags<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Pattern</td>\n<td>接收Pattern实例，表示转换后的正则表达式。无默认值。</td>\n</tr>\n<tr>\n<td>string</td>\n<td>接收str，表示输入的需要匹配的字符串。无默认值。</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>接收str，表示匹配的模式，取值为运算符”|”时表示同时生效。</td>\n</tr>\n</tbody></table>\n<h3 id=\"finall方法\"><a href=\"#finall方法\" class=\"headerlink\" title=\"finall方法\"></a>finall方法</h3><p><strong>该方法搜索整个string，并放回一个包含所有能匹配的子串的列表</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">re<span class=\"token punctuation\">.</span>finall<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>string<span class=\"token punctuation\">,</span>flags<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Pattern</td>\n<td>接收Pattern实例，表示转换后的正则表达式。无默认值。</td>\n</tr>\n<tr>\n<td>string</td>\n<td>接收str，表示输入的需要匹配的字符串。无默认值。</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>接收str，表示匹配的模式，取值为运算符”|”时表示同时生效，意思为“or”。</td>\n</tr>\n</tbody></table>\n<p><strong>使用finall方法找出字符串中的所有数字</strong></p>\n<p>若 str &#x3D; a1b2c3d4e5f6g7 找出其中的所有数字：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\npat <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'\\d+'</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'a1b2c3d4e5f6g7'</span>\t<span class=\"token comment\">#设定：str = a1b2c3d4e5f6g7</span>\nresult <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>   <span class=\"token comment\">#输出：['1', '2', '3', '4', '5', '6', '7']</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"获取网页中的标题内容\"><a href=\"#获取网页中的标题内容\" class=\"headerlink\" title=\"获取网页中的标题内容\"></a>获取网页中的标题内容</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> requests\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.tipdm.com/tipdm/index.html'</span>\n\nheader <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel xxx OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x xxxxx/xxx.xx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'_site_id_cookie=xx; _site_id_cookie=xx.x; JSESSIONID=abcdefg123456abcd1234; clientlanguage=zh_CN'</span>\n<span class=\"token punctuation\">&#125;</span>\nrequests_get <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> header<span class=\"token punctuation\">)</span>\nrequests_get<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span>\nhtml_text <span class=\"token operator\">=</span> requests_get<span class=\"token punctuation\">.</span>text\n\n<span class=\"token comment\"># &lt;title>泰迪科技-专注于大数据技术研发及知识传播&lt;/title></span>\npattern <span class=\"token operator\">=</span> <span class=\"token string\">r'(?&lt;=&lt;title>).*?(?=&lt;/title>)'</span>\nresult_com <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">)</span>\nresult_search <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>result_com<span class=\"token punctuation\">,</span> html_text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># &lt;re.Match object; span=(178, 198), match='泰迪科技-专注于大数据技术研发及知识传播'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result_search<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 泰迪科技-专注于大数据技术研发及知识传播</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result_search<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>一步到位</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> requests\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.tipdm.com/tipdm/index.html'</span>\nheader <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel xxx OS X xx_xx_x) AppleWebKit/xxx.xx (KHTML, like Gecko) Chrome/xxx.x.x.x xxxxx/xxx.xx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'_site_id_cookie=xx; _site_id_cookie=xx.x; JSESSIONID=abcdefg123456abcd1234; clientlanguage=zh_CN'</span>\n<span class=\"token punctuation\">&#125;</span>\nrequests_get <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> header<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># requests_get.encoding = 'utf-8'</span>\nhtml_text <span class=\"token operator\">=</span> requests_get<span class=\"token punctuation\">.</span>text\n<span class=\"token comment\"># &lt;title>泰迪科技-专注于大数据技术研发及知识传播&lt;/title></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;=&lt;title>).*?(?=&lt;/title>)'</span><span class=\"token punctuation\">,</span> html_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其实不推荐使用正则表达式去定位特定节点来获得其中想要的内容的。</p>\n<p>✅推荐使用：Xpath、BeautifulSoup。</p></blockquote>\n","text":"Python爬虫什么是爬虫：通过编写程序，模拟浏览器上网，然后让其去互联网上抓取数据的过程。 是一种自动获取网页数据信息的爬虫程序，是网站搜索引擎的重要组成部分。一般人能访问到的网页，爬虫也都能抓取。所谓的爬虫抓取，就是模拟人类访问目标网站。但和普通人访问方式不同，爬虫是可以按照...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"计算机","slug":"计算机","count":4,"path":"api/categories/计算机.json"},{"name":"Python","slug":"计算机/Python","count":1,"path":"api/categories/计算机/Python.json"}],"tags":[{"name":"笔记","slug":"笔记","count":6,"path":"api/tags/笔记.json"},{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Python%E7%88%AC%E8%99%AB\"><span class=\"toc-text\">Python爬虫</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E7%88%AC%E8%99%AB%EF%BC%9A\"><span class=\"toc-text\">什么是爬虫：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%AC%E8%99%AB%E7%9A%84%E4%BB%B7%E5%80%BC%EF%BC%9A\"><span class=\"toc-text\">爬虫的价值：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%AC%E8%99%AB%E7%9A%84%E5%8E%9F%E7%90%86%EF%BC%9A\"><span class=\"toc-text\">爬虫的原理：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E7%88%AC%E6%9C%BA%E5%88%B6%EF%BC%9A\"><span class=\"toc-text\">反爬机制：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%AC%E5%8F%96%E7%AD%96%E7%95%A5%EF%BC%9A\"><span class=\"toc-text\">爬取策略：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#robots-txt%E5%8D%8F%E8%AE%AE%EF%BC%9A\"><span class=\"toc-text\">robots.txt协议：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#http%E5%8D%8F%E8%AE%AE%EF%BC%9A\"><span class=\"toc-text\">http协议：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#requests%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">requests模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#request%E6%A8%A1%E5%9D%97%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">request模块是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#requests%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">requests的安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#http%E8%AF%B7%E6%B1%82%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">http请求类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B-x2F-%E7%BC%96%E7%A0%81%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">使用流程&#x2F;编码流程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%88%AC%E8%99%AB%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">第一个简单的爬虫程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9Aurl\"><span class=\"toc-text\">指定url</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#User-Agent%E4%BC%AA%E8%A3%85\"><span class=\"toc-text\">User-Agent伪装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E5%8F%91%E8%B5%B7%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">响应发起请求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">获取响应数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%81%E4%B9%85%E5%8C%96%E5%82%A8%E5%AD%98\"><span class=\"toc-text\">持久化储存</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">完整代码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9F%90%E5%BA%A6%E7%BF%BB%E8%AF%91%E7%A0%B4%E8%A7%A3\"><span class=\"toc-text\">某度翻译破解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9Aurl-1\"><span class=\"toc-text\">指定url</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#UA%E4%BC%AA%E8%A3%85\"><span class=\"toc-text\">UA伪装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#POST%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86\"><span class=\"toc-text\">POST请求参数处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B7%E6%B1%82%E5%8F%91%E9%80%81\"><span class=\"toc-text\">请求发送</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE-1\"><span class=\"toc-text\">获取响应数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E8%A1%8C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">进行持久化存储</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">完整代码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">正则表达式模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#re%E6%A8%A1%E5%9D%97%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">re模块常用的方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#compile%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">compile方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#search%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">search方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#finall%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">finall方法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E7%BD%91%E9%A1%B5%E4%B8%AD%E7%9A%84%E6%A0%87%E9%A2%98%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">获取网页中的标题内容</span></a></li></ol></li></ol>","author":{"name":"Chan_Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Vue基础入门","uid":"3a13b25df3ae48dbca78c649405861eb","slug":"Vue/Vue基础入门","date":"2022-09-01T13:30:00.000Z","updated":"2022-11-02T12:44:23.620Z","comments":true,"path":"api/articles/Vue/Vue基础入门.json","keywords":null,"cover":"/images/cover/4.jpg","text":"Vue.js基础入门1.什么是Vue​ Vue读音类似View，是一套用于构建用户界面的渐进式框架与其他大型框架（Angular、React…）相比,Vue被设计为可以自底向上逐层应用。而其他大型框架需要一开始就对项目的技术方案进行强制性的要求，Vue则更灵活，我们既可以选择Vu...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机","slug":"计算机","count":4,"path":"api/categories/计算机.json"},{"name":"Vue","slug":"计算机/Vue","count":1,"path":"api/categories/计算机/Vue.json"}],"tags":[{"name":"笔记","slug":"笔记","count":6,"path":"api/tags/笔记.json"},{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"}],"author":{"name":"Chan_Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MarkDown语法📖","uid":"88e8bb0bfdbc895aed5ccb8b7148e21d","slug":"语法篇/MarkDown语法","date":"2022-08-14T18:28:00.000Z","updated":"2022-11-02T12:52:05.815Z","comments":true,"path":"api/articles/语法篇/MarkDown语法.json","keywords":null,"cover":"/images/cover/6.jpg","text":"MarkDown语法📖✅标题一级标题： # 一级标题 一级标题效果二级标题： ## 二级标题 二级标题效果从一级标题（快捷键command⌘ + 1）到六级标题（快捷键command⌘ + 6）✅字体粗体： **粗体** 粗体效果 斜体： *斜体* 斜体效果 ✅列表有序列表： 1...","link":"","photos":[],"count_time":{"symbolsCount":569,"symbolsTime":"1 mins."},"categories":[{"name":"计算机","slug":"计算机","count":4,"path":"api/categories/计算机.json"}],"tags":[{"name":"笔记","slug":"笔记","count":6,"path":"api/tags/笔记.json"},{"name":"语法","slug":"语法","count":1,"path":"api/tags/语法.json"}],"author":{"name":"Chan_Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
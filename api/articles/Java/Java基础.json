{"title":"Java基础","uid":"3316961ecf1671c6065b043220187c47","slug":"Java/Java基础","date":"2022-10-26T08:32:00.000Z","updated":"2022-10-27T13:19:00.813Z","comments":true,"path":"api/articles/Java/Java基础.json","keywords":null,"cover":"/images/Java/1.png","content":"<h1 id=\"Java基础\"><a href=\"#Java基础\" class=\"headerlink\" title=\"Java基础\"></a>Java基础</h1><ol>\n<li>Java对大小写敏感。</li>\n<li>关键字class对意思是类。Java是面向对象的语言，所有代码必须放在class里面。</li>\n<li>编译后的源文件，得到相应的字节码文件，编译起为每个类生成独立的字节码文件。</li>\n<li>main方法是Java应用程序的入口方法 固定格式: <strong>Public static void (String[] args) { }</strong></li>\n<li>一个源文件可以包含多个类。</li>\n<li>每个语句必须以分号结束，回车不是语句的结束标志。</li>\n</ol>\n<details class=\"custom-details\">\n<summary>Click to see more</summary>\n<p>建议：</p>\n<ol>\n<li>编程是一定要注意缩进规范</li>\n<li>在写括号、引号时，一定要成对敲出来后再往里面写代码</li>\n</ol>\n<p>\t</p>\n\n</details>\n<h2 id=\"创建第一个Java程序\"><a href=\"#创建第一个Java程序\" class=\"headerlink\" title=\"创建第一个Java程序\"></a>创建第一个Java程序</h2><p>​\t在桌面创建一个java文本文件，命名为 <strong>test</strong>（test.java），然后编辑<strong>test.java</strong>文件，写入代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span>\t<span class=\"token comment\">//class的名字一定要和java文本文件名一致！！！</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t<span class=\"token comment\">//开头固定搭配！！！</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Chan_Honman,你好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a test!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是第三行代码\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​\t写完代码后记得保存（⌘ + s &#x2F; Ctrl + s ），然后打开终端输入命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#\t将test.java文件编译成字节码文件 </span>\njavac test.java\n<span class=\"token comment\">#\t运行程序</span>\n<span class=\"token function\">java</span> <span class=\"token builtin class-name\">test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​\t其中 javac 命令的作用是：启动java的编译器程序。对指定扩展名的.java文件进行编译。 生成了jvm可以识别的字节码文件。也就是class文件，也就是java的运行程序。</p>\n<p>​\t而 java 命令的作用是：负责运行的部分.会启动jvm.加载运行时所需的类库,并对class文件进行执行.一个文件要被执行,必须要有一个执行的起始点,这个起始点就是main函数.</p>\n<p>​\t工作原理如下：</p>\n<p><img src=\"/images/Java/2.png\"></p>\n<h2 id=\"最常用DOS命令\"><a href=\"#最常用DOS命令\" class=\"headerlink\" title=\"最常用DOS命令\"></a>最常用DOS命令</h2><p>磁盘操作系统（Disk Operating System）是早期个人电脑上的一类操作系统。</p>\n<p>常用命令：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>cd</td>\n<td>进入一个目录</td>\n</tr>\n<tr>\n<td>cd ..</td>\n<td>进入父级目录</td>\n</tr>\n<tr>\n<td>dir</td>\n<td>查看本目录下的文件和子目录列表</td>\n</tr>\n<tr>\n<td>cls</td>\n<td>清楚屏幕命令 现在是（clear）</td>\n</tr>\n<tr>\n<td>上下键</td>\n<td>查找之前敲过的命令</td>\n</tr>\n<tr>\n<td>Tab键盘</td>\n<td>自动补全命令</td>\n</tr>\n</tbody></table>\n<h2 id=\"十进制和二进制转换\"><a href=\"#十进制和二进制转换\" class=\"headerlink\" title=\"十进制和二进制转换\"></a>十进制和二进制转换</h2><h3 id=\"1-十进制转二进制\"><a href=\"#1-十进制转二进制\" class=\"headerlink\" title=\"1.十进制转二进制\"></a>1.十进制转二进制</h3><p>​\t十进制整数转换为二进制整数采用 <strong>“除2取余 逆序排序”</strong> 法。</p>\n<p>将十进制的(43)D转换为二进制的步骤如下：</p>\n<ol>\n<li><p>将商43除以2，商21余数为1；</p>\n</li>\n<li><p>将商21除以2，商10余数为1；</p>\n</li>\n<li><p>将商10除以2，商5余数为0；</p>\n</li>\n<li><p>将商5除以2，商2余数为1；</p>\n</li>\n<li><p>将商2除以2，商1余数为0； </p>\n</li>\n<li><p>将商1除以2，商0余数为1； </p>\n</li>\n<li><p>读数，因为最后一位是经过多次除以2才得到的，因此它是最高位，读数字从最后的余数向前读，101011，即(43)D&#x3D;(101011)B。</p>\n</li>\n</ol>\n<h3 id=\"2-二进制转十进制\"><a href=\"#2-二进制转十进制\" class=\"headerlink\" title=\"2.二进制转十进制\"></a>2.二进制转十进制</h3><p>​\t采用 <strong>“权位相加”</strong> 法</p>\n<p>将二进制的(101011)B转换为十进制的步骤如下：</p>\n<ol>\n<li><p>第0位 1 x $2^0$ &#x3D; 1；</p>\n</li>\n<li><p>第1位 1 x $2^1$ &#x3D; 2；</p>\n</li>\n<li><p>第2位 0 x $2^2$ &#x3D; 0；</p>\n</li>\n<li><p>第3位 1 x $2^3$ &#x3D; 8；</p>\n</li>\n<li><p>第4位 0 x $2^4$ &#x3D; 0；</p>\n</li>\n<li><p>第5位 1 x $2^5$ &#x3D; 32；</p>\n</li>\n<li><p>读数，把结果值相加，1+2+0+8+0+32&#x3D;43，即(101011)B&#x3D;(43)D。</p>\n</li>\n</ol>\n<h2 id=\"Java注释\"><a href=\"#Java注释\" class=\"headerlink\" title=\"Java注释\"></a>Java注释</h2><p>​\t注释不会出现在字节码文件中，也就是说编译器是会跳过注释的语句。在Java中注释分为三种。</p>\n<h3 id=\"1-单行注释\"><a href=\"#1-单行注释\" class=\"headerlink\" title=\"1.单行注释\"></a>1.单行注释</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">//这是单行注释 main（）方法是程序的入口</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Chan_Honman,你好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"2-多行注释\"><a href=\"#2-多行注释\" class=\"headerlink\" title=\"2.多行注释\"></a>2.多行注释</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">/*\n        这是多行注释\n        这是多行注释\n        这是多行注释\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">/*行内注释： arguments的缩写是args */</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Chan_Honman,你好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"3-文档注释\"><a href=\"#3-文档注释\" class=\"headerlink\" title=\"3.文档注释\"></a>3.文档注释</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">/**\n * 这是文档注释 主要用于开发环境 IDEA、Eclipse、VScode\n * @author chan_honman\n * @version 1.0\n*/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Chan_Honman,你好！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"标识符和关键字\"><a href=\"#标识符和关键字\" class=\"headerlink\" title=\"标识符和关键字\"></a>标识符和关键字</h2><h3 id=\"1-标识符\"><a href=\"#1-标识符\" class=\"headerlink\" title=\"1.标识符\"></a>1.标识符</h3><p>​\t<strong>标识符</strong>是用来给变量、类、方法和包进行命名的。</p>\n<p>标识符4大规则：</p>\n<ol>\n<li>必须以字母、下划线_ 、美元符号$ 开头。</li>\n<li>其他部分可以是字母、下划线_ 、美元符号$ 和数字任意组合。</li>\n<li>大小写敏感，且长度无限制。</li>\n<li>不可用Java的<strong>关键字</strong>。</li>\n</ol>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><p>表示类名的标识符：每个单词的首字母大写，如：Boy、GoodBoy</p>\n<p>表示方法和变量的标识符：第一个字母小写，从第二个单词开始首字母大写（<strong>驼峰原则</strong>）如：eat()、eatFood()</p>\n<p>​\tJava不采用ASCII字符集，而是用Unicode字符集。所以这里字母的含义不仅仅是英文，还包括汉字等等。但是<strong>不建议使用汉字来定义标识符</strong>！因为不够高级，不够酷，<strong>不够官方</strong>。</p>\n</p>\n</div>\n<h3 id=\"2-关键字\"><a href=\"#2-关键字\" class=\"headerlink\" title=\"2.关键字\"></a>2.关键字</h3><p>​\t<strong>48个关键字</strong>：abstract、assert、<strong>boolean</strong>、<strong>break</strong>、byte、case、catch、<strong>char</strong>、<strong>class</strong>、continue、default、do、<strong>double</strong>、else、enum、extends、final、finally、<strong>float</strong>、<strong>for</strong>、<strong>if</strong>、implements、<strong>import</strong>、<strong>int</strong>、interface、instanceof、<strong>long</strong>、native、<strong>new</strong>、package、private、protected、<strong>public</strong>、<strong>return</strong>、<strong>short</strong>、<strong>static</strong>、strictfp、super、<strong>switch</strong>、synchronized、<strong>this</strong>、throw、throws、transient、<strong>try</strong>、<strong>void</strong>、volatile、<strong>while</strong>。</p>\n<h2 id=\"变量的分类和作用域\"><a href=\"#变量的分类和作用域\" class=\"headerlink\" title=\"变量的分类和作用域\"></a>变量的分类和作用域</h2><p>变量有三种类型：</p>\n<ol>\n<li>局部变量</li>\n<li>成员变量（实例变量）</li>\n<li>静态变量</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>声明位置</th>\n<th>从属于</th>\n<th>生命周期（作用域）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>局部变量</td>\n<td>方法或语句内部</td>\n<td>方法&#x2F;语句块</td>\n<td>从声明位置开始。知道方法或语句块执行完毕。局部变量消失</td>\n</tr>\n<tr>\n<td>成员变量（实例变量）</td>\n<td>类内部，方法外部</td>\n<td>对象object</td>\n<td>对象创建，成员变量页跟着创建。对象消失，成员变量也跟着消失</td>\n</tr>\n<tr>\n<td>静态变量（类变量）</td>\n<td>类内部，static修饰</td>\n<td>类class</td>\n<td>类被加载，静态变量就有效。类被卸载，静态变量消失</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//成员变量</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//静态变量</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> agrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//局部变量</span>\n        <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//只是声明了变量b 还没有初始化</span>\n        <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//输出：18</span>\n        b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//变量使用之前必须初始化</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//输出：0</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//输出：1</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><strong>下面代码哪个是正确的？？？</strong></p>\n<p>A代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>B代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n        i <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n</div>\n<details class=\"custom-details\">\n<summary>Click to see the answer</summary>\n<p><p>答案：B</p>\n<p>因为 A 代码中的错误如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//编译出错 变量 i 没有被初始化</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>变量 i 没有被初始化</strong></p>\n</p>\n</details>\n<h2 id=\"常量-和-final\"><a href=\"#常量-和-final\" class=\"headerlink\" title=\"常量 和 final\"></a>常量 和 final</h2><p>​\t在Java中，用关键字 <strong>final</strong> 来定义一个常量。常量<strong>一旦被初始化后就不能再更改</strong>。</p>\n<p>声明格式：<strong>final</strong> type varName &#x3D; value;</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestConstant</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//pi = 3.1415;    //Cannot assign a value to final variable 'pi'</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一般将1、2、3、’a’、’b’、’c’、true、false、”helloWorld”等称为<strong>字符常量</strong>，而使用final修饰的 pi 等称为<strong>符号常量</strong>。</p></blockquote>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p><strong>变量和常量的命名规范</strong></p>\n<ol>\n<li>大写字母和下划线：MAX_VALUE</li>\n<li>类成员变量：首字母小写、驼峰原则</li>\n<li>类名：首字母大写、驼峰原则（ Man、GoodMan ）</li>\n<li>方法名：首字母小写、驼峰原则( play()、playComputer() )</li>\n</ol>\n<p><strong>练习题：圆的半径r为4 π约为3.14 计算该圆的面积area和周长perimeter</strong></p>\n\n</div>\n<details class=\"custom-details\">\n<summary>Click to see the answer</summary>\n<p><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 圆的半径r为4 π约为3.14 计算该圆的面积area和周长perimeter\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestConstant</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//π</span>\n        <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//半径为4</span>\n        <span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> pi <span class=\"token operator\">*</span> r <span class=\"token operator\">*</span> r<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> perimeter <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> pi <span class=\"token operator\">*</span> r<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"圆的面积：\"</span> <span class=\"token operator\">+</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//输出：圆的面积：50.24</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"圆的周长：\"</span> <span class=\"token operator\">+</span> perimeter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//输出：圆的周长：25.12</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<h2 id=\"基本数据类型-Primitive-data-type\"><a href=\"#基本数据类型-Primitive-data-type\" class=\"headerlink\" title=\"基本数据类型 Primitive data type\"></a>基本数据类型 Primitive data type</h2><p><img src=\"/images/Java/3.png\"></p>\n<h3 id=\"整型\"><a href=\"#整型\" class=\"headerlink\" title=\"整型\"></a>整型</h3><p>一共有四种类型：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>占用存储空间</th>\n<th>范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>byte</td>\n<td>1字节</td>\n<td>-2^7 到  2^7 - 1</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2字节</td>\n<td>-2^15 到  2^15 - 1</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4字节</td>\n<td>-2^31 到  2^31 - 1</td>\n</tr>\n<tr>\n<td>long</td>\n<td>8字节</td>\n<td>-2^63 到  2^63 - 1</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Java语言整型常量的四种表示形式：</p>\n<ol>\n<li>十进制整数：如：99、-500、0</li>\n<li>八进制整数：要求以 0 开头，如：014</li>\n<li>十六进制整数：要求以 0x 开头 或 0X 开头，如：0x14</li>\n<li>二进制整数：要求 0b 或 0B 开头，如：0b01110011</li>\n</ol></blockquote>\n","feature":true,"text":"Java基础 Java对大小写敏感。 关键字class对意思是类。Java是面向对象的语言，所有代码必须放在class里面。 编译后的源文件，得到相应的字节码文件，编译起为每个类生成独立的字节码文件。 main方法是Java应用程序的入口方法 固定格式: Public stati...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"计算机","slug":"计算机","count":8,"path":"api/categories/计算机.json"},{"name":"Java","slug":"计算机/Java","count":1,"path":"api/categories/计算机/Java.json"}],"tags":[{"name":"笔记","slug":"笔记","count":10,"path":"api/tags/笔记.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">Java基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">创建第一个Java程序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">最常用DOS命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E8%BF%9B%E5%88%B6%E5%92%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">十进制和二进制转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">1.十进制转二进制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">2.二进制转十进制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">Java注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">1.单行注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">2.多行注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">3.文档注释</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%87%E8%AF%86%E7%AC%A6%E5%92%8C%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">标识符和关键字</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%A0%87%E8%AF%86%E7%AC%A6\"><span class=\"toc-text\">1.标识符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">2.关键字</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">变量的分类和作用域</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F-%E5%92%8C-final\"><span class=\"toc-text\">常量 和 final</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-Primitive-data-type\"><span class=\"toc-text\">基本数据类型 Primitive data type</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E5%9E%8B\"><span class=\"toc-text\">整型</span></a></li></ol></li></ol></li></ol>","author":{"name":"Chan_Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"05 正则表达式模块","uid":"059ec1eb0f233ad930c259994ad352a0","slug":"python爬虫/05 正则表达式模块","date":"2022-10-19T06:58:00.000Z","updated":"2022-10-19T10:57:06.331Z","comments":true,"path":"api/articles/python爬虫/05 正则表达式模块.json","keywords":null,"cover":null,"text":"正则表达式模块Python通过自带的re模块来支持正则表达式 先将正则表达式的String编译为“Pattern”实例 使用Pattern实例处理结文本并且获得匹配结果（一个Match实例） 使用Match实例获得信息 re模块常用的方法 方法名 说明 compile 将正则表达...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"计算机","slug":"计算机","count":8,"path":"api/categories/计算机.json"},{"name":"Python爬虫","slug":"计算机/Python爬虫","count":5,"path":"api/categories/计算机/Python爬虫.json"}],"tags":[{"name":"笔记","slug":"笔记","count":10,"path":"api/tags/笔记.json"},{"name":"Python爬虫","slug":"Python爬虫","count":5,"path":"api/tags/Python爬虫.json"}],"author":{"name":"Chan_Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}
{"title":"JavaScript-基础笔记","uid":"5db41f0a5fc879d1afc84eff3a276b04","slug":"前端/JavaScript/JavaScript基础","date":"2023-08-10T02:20:00.000Z","updated":"2023-09-11T10:23:32.384Z","comments":true,"path":"api/articles/前端/JavaScript/JavaScript基础.json","keywords":null,"cover":"/images/cover/4.jpg","content":"<h1 id=\"JavaScript-基础\"><a href=\"#JavaScript-基础\" class=\"headerlink\" title=\"JavaScript 基础\"></a>JavaScript 基础</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>掌握 JavaScript 的引入方式，初步认识 JavaScript 的作用</p></blockquote>\n<h3 id=\"引入方式\"><a href=\"#引入方式\" class=\"headerlink\" title=\"引入方式\"></a>引入方式</h3><p>JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 <code>script</code> 标签将 JavaScript 代码引入到 HTML 中，有两种方式：</p>\n<h4 id=\"内部方式\"><a href=\"#内部方式\" class=\"headerlink\" title=\"内部方式\"></a>内部方式</h4><p>通过 <code>script</code> 标签包裹 JavaScript 代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 内联形式：通过 script 标签包裹 JavaScript 代码 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"外部形式\"><a href=\"#外部形式\" class=\"headerlink\" title=\"外部形式\"></a>外部形式</h4><p>一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 <code>script</code> 标签的 <code>src</code> 属性引入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// demo.js</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;demo.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果 script 标签使用 src 属性引入了某 .js 文件，那么 标签的代码会被忽略！！！如下代码所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;demo.js&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 此处的代码会被忽略掉！！！！</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  \t<span class=\"title function_\">alert</span>(<span class=\"number\">666</span>);  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释和结束符\"><a href=\"#注释和结束符\" class=\"headerlink\" title=\"注释和结束符\"></a>注释和结束符</h3><p>通过注释可以屏蔽代码被执行或者添加备注信息，JavaScript 支持两种形式注释语法：</p>\n<h4 id=\"单行注释\"><a href=\"#单行注释\" class=\"headerlink\" title=\"单行注释\"></a>单行注释</h4><p>使用 <code>// </code> 注释单行代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种是单行注释的语法</span></span><br><span class=\"line\"><span class=\"comment\">// 一次只能注释一行</span></span><br><span class=\"line\"><span class=\"comment\">// 可以重复注释</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;嗨，欢迎来到王者荣耀~ 学习前端技术！&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h4><p>使用 <code>/* */</code> 注释多行代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 这种的是多行注释的语法 */</span></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  \t更常见的多行注释是这种写法</span></span><br><span class=\"line\"><span class=\"comment\">  \t在些可以任意换行</span></span><br><span class=\"line\"><span class=\"comment\">  \t多少行都可以</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：编辑器中单行注释的快捷键为 <code>ctrl + /</code></strong></p>\n<h3 id=\"结束符\"><a href=\"#结束符\" class=\"headerlink\" title=\"结束符\"></a>结束符</h3><p>在 JavaScript 中 <code>;</code> 代表一段代码的结束，多数情况下可以省略 <code>;</code> 使用回车（enter）替代。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<p>实际开发中有许多人主张书写 JavaScript 代码时省略结束符 <code>;</code></p>\n<h3 id=\"输入和输出\"><a href=\"#输入和输出\" class=\"headerlink\" title=\"输入和输出\"></a>输入和输出</h3><p>输出和输入也可理解为人和计算机的交互，用户通过键盘、鼠标等向计算机输入信息，计算机处理后再展示结果给用户，这便是一次输入和输出的过程。</p>\n<p>举例说明：如按键盘上的方向键，向上&#x2F;下键可以滚动页面，按向上&#x2F;下键这个动作叫作输入，页面发生了滚动了这便叫输出。</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>JavaScript 可以接收用户的输入，然后再将输入的结果输出：</p>\n<p><code>alert()</code>、<code>document.wirte()</code></p>\n<p>以数字为例，向 <code>alert()</code> 或 <code>document.write()</code>输入任意数字，他都会以弹窗形式展示（输出）给用户。</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>向 <code>prompt()</code> 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 输入的任意数字，都会以弹窗形式展示</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;要输出的内容&#x27;</span>)</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;要输出的内容&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 以弹窗形式提示用户输入姓名，注意这里的文字使用英文的引号</span></span><br><span class=\"line\"><span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入您的姓名:&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>理解变量是计算机存储数据的“容器”，掌握变量的声明方式</p></blockquote>\n<p>变量是计算机中用来存储数据的“容器”，它可以让计算机变得有记忆，通俗的理解变量就是使用【某个符号】来代表【某个具体的数值】（数据）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// x 符号代表了 5 这个数值</span></span><br><span class=\"line\">x = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"comment\">// y 符号代表了 6 这个数值</span></span><br><span class=\"line\">y = <span class=\"number\">6</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//举例： 在 JavaScript 中使用变量可以将某个数据（数值）记录下来！</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将用户输入的内容保存在 num 这个变量（容器）中</span></span><br><span class=\"line\">num = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入一数字!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过 num 变量（容器）将用户输入的内容输出出来</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(num)</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(num)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h3><p>声明(定义)变量有两部分构成：声明关键字、变量名（标识）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let 变量名</span></span><br><span class=\"line\"><span class=\"comment\">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span><br><span class=\"line\"><span class=\"comment\">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span><br><span class=\"line\"><span class=\"comment\">// age 即变量的名称，也叫标识符</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age</span><br></pre></td></tr></table></figure>\n\n<p>关键字是 JavaScript 中内置的一些英文词汇（单词或缩写），它们代表某些特定的含义，如 <code>let</code> 的含义是声明变量的，看到 <code>let</code>  后就可想到这行代码的意思是在声明变量，如 <code>let age;</code> </p>\n<p><code>let</code> 和 <code>var</code> 都是 JavaScript 中的声明变量的关键字，推荐使用 <code>let</code> 声明变量！！！</p>\n<h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3><p>声明（定义）变量相当于创造了一个空的“容器”，通过赋值向这个容器中添加数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span><br><span class=\"line\"><span class=\"comment\">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span><br><span class=\"line\"><span class=\"comment\">// age 即变量的名称，也叫标识符</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age</span><br><span class=\"line\"><span class=\"comment\">// 赋值，将 18 这个数据存入了 age 这个“容器”中</span></span><br><span class=\"line\">age = <span class=\"number\">18</span></span><br><span class=\"line\"><span class=\"comment\">// 这样 age 的值就成了 18</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(age)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 也可以声明和赋值同时进行</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello world!&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(str);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><p>JavaScript 使用专门的关键字 <code>let</code> 和 <code>var</code> 来声明（定义）变量，在使用时需要注意一些细节：</p>\n<p>以下是使用 <code>let</code> 时的注意事项：</p>\n<ol>\n<li>允许声明和赋值同时进行</li>\n<li>不允许重复声明</li>\n<li>允许同时声明多个变量并赋值</li>\n<li>JavaScript 中内置的一些关键字不能被当做变量名</li>\n</ol>\n<p>以下是使用 <code>var</code> 时的注意事项：</p>\n<ol start=\"2\">\n<li>允许声明和赋值同时进行</li>\n<li>允许重复声明</li>\n<li>允许同时声明多个变量并赋值</li>\n</ol>\n<p>大部分情况使用 <code>let</code> 和 <code>var</code> 区别不大，但是 <code>let</code> 相较 <code>var</code> 更严谨，因此推荐使用 <code>let</code>，后期会更进一步介绍二者间的区别。</p>\n<h3 id=\"变量名命名规则\"><a href=\"#变量名命名规则\" class=\"headerlink\" title=\"变量名命名规则\"></a>变量名命名规则</h3><p>关于变量的名称（标识符）有一系列的规则需要遵守：</p>\n<ol>\n<li>只能是字母、数字、下划线、$，且不能能数字开头</li>\n<li>字母区分大小写，如 Age 和 age 是不同的变量</li>\n<li>JavaScript 内部已占用于单词（关键字或保留字）不允许使用</li>\n<li>尽量保证变量具有一定的语义，见字知义</li>\n</ol>\n<p>注：所谓关键字是指 JavaScript 内部使用的词语，如 <code>let</code> 和<code>var</code>，保留字是指 JavaScript 内部目前没有使用的词语，但是将来可能会使用词语。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span> <span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age1 = <span class=\"number\">18</span> <span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> _age = <span class=\"number\">18</span> <span class=\"comment\">// 正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let 1age = 18; // 错误，不可以数字开头</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> $age = <span class=\"number\">18</span> <span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">Age</span> = <span class=\"number\">24</span> <span class=\"comment\">// 正确，它与小写的 age 是不同的变量</span></span><br><span class=\"line\"><span class=\"comment\">// let let = 18; // 错误，let 是关键字</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> int = <span class=\"number\">123</span> <span class=\"comment\">// 不推荐，int 是保留字</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h2><p>概念：使用 const 声明的变量称为“常量”。</p>\n<p>使用场景：当某个变量永远不会改变的时候，就可以使用 const 来声明，而不是let。</p>\n<p>命名规范：和变量一致</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">PI</span> = <span class=\"number\">3.14</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意： 常量不允许重新赋值,声明的时候必须赋值（初始化）</p></blockquote>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>计算机世界中的万事成物都是数据。</p></blockquote>\n<p>计算机程序可以处理大量的数据，为了方便数据的管理，将数据分成了不同的类型：</p>\n<p>注：通过 typeof 关键字检测数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测 1 是什么类型数据，结果为 number</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数值类型\"><a href=\"#数值类型\" class=\"headerlink\" title=\"数值类型\"></a>数值类型</h3><p>即我们数学中学习到的数字，可以是整数、小数、正数、负数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> score = <span class=\"number\">100</span> <span class=\"comment\">// 正整数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> price = <span class=\"number\">12.345</span> <span class=\"comment\">// 小数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> temperature = -<span class=\"number\">40</span> <span class=\"comment\">// 负数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> score) <span class=\"comment\">// 结果为 number</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> price) <span class=\"comment\">// 结果为 number</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> temperature) <span class=\"comment\">// 结果为 number</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript 中的数值类型与数学中的数字是一样的，分为正数、负数、小数等。</p>\n<h3 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h3><p>通过单引号（ <code>&#39;&#39;</code>） 、双引号（ <code>&quot;&quot;</code>）或反引号包裹的数据都叫字符串，单引号和双引号没有本质上的区别，推荐使用单引号。</p>\n<p>注意事项：</p>\n<ol>\n<li>无论单引号或是双引号必须成对使用</li>\n<li>单引号&#x2F;双引号可以互相嵌套，但是不以自已嵌套自已</li>\n<li>必要时可以使用转义符 <code>\\</code>，输出单引号或双引号</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> user_name = <span class=\"string\">&#x27;小明&#x27;</span> <span class=\"comment\">// 使用单引号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> gender = <span class=\"string\">&quot;男&quot;</span> <span class=\"comment\">// 使用双引号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;123&#x27;</span> <span class=\"comment\">// 看上去是数字，但是用引号包裹了就成了字符串了</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str1 = <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 这种情况叫空字符串</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">documeent.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> user_name) <span class=\"comment\">// 结果为 string</span></span><br><span class=\"line\">documeent.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> gender) <span class=\"comment\">// 结果为 string</span></span><br><span class=\"line\">documeent.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> str) <span class=\"comment\">// 结果为 string</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"布尔类型\"><a href=\"#布尔类型\" class=\"headerlink\" title=\"布尔类型\"></a>布尔类型</h3><p>表示肯定或否定时在计算机中对应的是布尔类型数据，它有两个固定的值 <code>true</code> 和 <code>false</code>，表示肯定的数据用 <code>true</code>，表示否定的数据用 <code>false</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  pink老师帅不帅？回答 是 或 否</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> isCool = <span class=\"literal\">true</span> <span class=\"comment\">// 是的，摔死了！</span></span><br><span class=\"line\">isCool = <span class=\"literal\">false</span> <span class=\"comment\">// 不，套马杆的汉子！</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> isCool) <span class=\"comment\">// 结果为 boolean</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>未定义是比较特殊的类型，只有一个值 undefined，只声明变量，不赋值的情况下，变量的默认值为 undefined，一般很少【直接】为某个变量赋值为 undefined。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只声明了变量，并末赋值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tmp;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"keyword\">typeof</span> tmp) <span class=\"comment\">// 结果为 undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注：JavaScript 中变量的值决定了变量的数据类型。</strong></p>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>理解弱类型语言的特征，掌握显式类型转换的方法</p></blockquote>\n<p>在 JavaScript 中数据被分成了不同的类型，如数值、字符串、布尔值、undefined，在实际编程的过程中，不同数据类型之间存在着转换的关系。</p>\n<h3 id=\"隐式转换\"><a href=\"#隐式转换\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><p>某些运算符被执行时，系统内部自动将数据类型进行转换，这种转换称为隐式转换。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">13</span> <span class=\"comment\">// 数值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num2 = <span class=\"string\">&#x27;2&#x27;</span> <span class=\"comment\">// 字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为 132</span></span><br><span class=\"line\"><span class=\"comment\">// 原因是将数值 num 转换成了字符串，相当于 &#x27;13&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 然后 + 将两个字符串拼接到了一起</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num + num2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果为 11</span></span><br><span class=\"line\"><span class=\"comment\">// 原因是将字符串 num2 转换成了数值，相当于 2</span></span><br><span class=\"line\"><span class=\"comment\">// 然后数值 13 减去 数值 2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num - num2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入一个数字&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请再输入一个数字&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(a + b)</span><br></pre></td></tr></table></figure>\n\n<p>注：数据类型的隐式转换是 JavaScript 的特征，后续学习中还会遇到，目前先需要理解什么是隐式转换。</p>\n<p>补充介绍模板字符串的拼接的使用</p>\n<h3 id=\"显式转换\"><a href=\"#显式转换\" class=\"headerlink\" title=\"显式转换\"></a>显式转换</h3><p>编写程序时过度依靠系统内部的隐式转换是不严禁的，因为隐式转换规律并不清晰，大多是靠经验总结的规律。为了避免因隐式转换带来的问题，通常根逻辑需要对数据进行显示转换。</p>\n<h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><p>通过 <code>Number</code> 显示转换成数值类型，当转换失败时结果为 <code>NaN</code>（Not a Number）即不是一个数字。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> t = <span class=\"string\">&#x27;12&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> f = <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 显式将字符串 12 转换成数值 12</span></span><br><span class=\"line\">t = <span class=\"title class_\">Number</span>(t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测转换后的类型</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(typeof t);</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t + f) <span class=\"comment\">// 结果为 20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 并不是所有的值都可以被转成数值类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 将 hello 转成数值是不现实的，当无法转换成</span></span><br><span class=\"line\"><span class=\"comment\">// 数值时，得到的结果为 NaN （Not a Number）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Number</span>(str))</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><p>数字是用来计算的，比如：乘法 * 、除法 &#x2F; 、加法 + 、减法 - 等等，所以经常和算术运算符一起。</p>\n<p>算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>求和</td>\n</tr>\n<tr>\n<td>-</td>\n<td>求差</td>\n</tr>\n<tr>\n<td>*</td>\n<td>求积</td>\n</tr>\n<tr>\n<td>&#x2F;</td>\n<td>求商</td>\n</tr>\n<tr>\n<td><strong>%</strong></td>\n<td>取模（取余数），开发中经常用于作为某个数字是否被整除</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：在计算失败时，显示的结果是 NaN （not a number）</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 算术运算符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span> + <span class=\"number\">2</span> * <span class=\"number\">3</span> / <span class=\"number\">2</span>) <span class=\"comment\">//  4 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num + <span class=\"number\">10</span>)  <span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num + num)  <span class=\"comment\">// 20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 取模(取余数)  使用场景：  用来判断某个数是否能够被整除</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span> % <span class=\"number\">2</span>) <span class=\"comment\">//  0  </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span> % <span class=\"number\">3</span>) <span class=\"comment\">//  0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">5</span> % <span class=\"number\">3</span>) <span class=\"comment\">//  2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> % <span class=\"number\">5</span>) <span class=\"comment\">//  3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 注意事项 : 如果我们计算失败，则返回的结果是 NaN (not a number)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;pink老师&#x27;</span> - <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;pink老师&#x27;</span> * <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;pink老师&#x27;</span> + <span class=\"number\">2</span>)   <span class=\"comment\">// pink老师2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><p>赋值运算符：对变量进行赋值的运算符</p>\n<p> &#x3D;     将等号右边的值赋予给左边, 要求左边必须是一个容器</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+&#x3D;</td>\n<td>加法赋值</td>\n</tr>\n<tr>\n<td>-+</td>\n<td>减法赋值</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>乘法赋值</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>除法赋值</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>取余赋值</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">// num = num + 1</span></span><br><span class=\"line\"><span class=\"comment\">// 采取赋值运算符</span></span><br><span class=\"line\"><span class=\"comment\">// num += 1</span></span><br><span class=\"line\">num += <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自增-自减运算符\"><a href=\"#自增-自减运算符\" class=\"headerlink\" title=\"自增&#x2F;自减运算符\"></a>自增&#x2F;自减运算符</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>++</td>\n<td>自增</td>\n<td>变量自身的值加1，例如: x++</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减</td>\n<td>变量自身的值减1，例如: x–</td>\n</tr>\n</tbody></table>\n<ol>\n<li>++在前和++在后在单独使用时二者并没有差别，而且一般开发中我们都是独立使用</li>\n<li>++在后（后缀式）我们会使用更多</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：</p>\n<ol>\n<li>只有变量能够使用自增和自减运算符</li>\n<li>++、– 可以在变量前面也可以在变量后面，比如: x++  或者  ++x</li>\n</ol></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let num = 10</span></span><br><span class=\"line\"><span class=\"comment\">// num = num + 1</span></span><br><span class=\"line\"><span class=\"comment\">// num += 1</span></span><br><span class=\"line\"><span class=\"comment\">// // 1. 前置自增</span></span><br><span class=\"line\"><span class=\"comment\">// let i = 1</span></span><br><span class=\"line\"><span class=\"comment\">// ++i</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(i)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let i = 1</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(++i + 1)</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 后置自增</span></span><br><span class=\"line\"><span class=\"comment\">// let i = 1</span></span><br><span class=\"line\"><span class=\"comment\">// i++</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(i)</span></span><br><span class=\"line\"><span class=\"comment\">// let i = 1</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(i++ + 1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 了解 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i++ + ++i + i)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h3><p>使用场景：比较两个数据大小、是否相等，根据比较结果返回一个布尔值（true &#x2F; false）</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&gt;</td>\n<td>左边是否大于右边</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>左边是否小于右边</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>左边是否大于或等于右边</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>左边是否小于或等于右边</td>\n</tr>\n<tr>\n<td>&#x3D;&#x3D;&#x3D;</td>\n<td>左右两边是否<code>类型</code>和<code>值</code>都相等（重点）</td>\n</tr>\n<tr>\n<td>&#x3D;&#x3D;</td>\n<td>左右两边<code>值</code>是否相等</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>左右值不相等</td>\n</tr>\n<tr>\n<td>!&#x3D;&#x3D;</td>\n<td>左右两边是否不全等</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> &gt; <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> &gt;= <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span> == <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">// 比较运算符有隐式转换 把&#x27;2&#x27; 转换为 2  双等号 只判断值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span> == <span class=\"string\">&#x27;2&#x27;</span>)  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(undefined === null)</span></span><br><span class=\"line\"><span class=\"comment\">// === 全等 判断 值 和 数据类型都一样才行</span></span><br><span class=\"line\"><span class=\"comment\">// 以后判断是否相等 请用 ===  </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span> === <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">NaN</span> === <span class=\"title class_\">NaN</span>) <span class=\"comment\">// NaN 不等于任何人，包括他自己</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span> !== <span class=\"string\">&#x27;2&#x27;</span>)  <span class=\"comment\">// true  </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span> != <span class=\"string\">&#x27;2&#x27;</span>) <span class=\"comment\">// false </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-------------------------&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;a&#x27;</span> &lt; <span class=\"string\">&#x27;b&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aa&#x27;</span> &lt; <span class=\"string\">&#x27;ab&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;aa&#x27;</span> &lt; <span class=\"string\">&#x27;aac&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-------------------------&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><p>使用场景：可以把多个布尔值放到一起运算，最终返回一个布尔值</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>名称</th>\n<th>日常读法</th>\n<th>特点</th>\n<th>口诀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;&amp;</td>\n<td>逻辑与</td>\n<td>并且</td>\n<td>符号两边有一个假的结果为假</td>\n<td>一假则假</td>\n</tr>\n<tr>\n<td>||</td>\n<td>逻辑或</td>\n<td>或者</td>\n<td>符号两边有一个真的结果为真</td>\n<td>一真则真</td>\n</tr>\n<tr>\n<td>!</td>\n<td>逻辑非</td>\n<td>取反</td>\n<td>true变false  false变true</td>\n<td>真变假，假变真</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>A &amp;&amp; B</th>\n<th>A || B</th>\n<th>!A</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n<td>true</td>\n<td>true</td>\n</tr>\n<tr>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>true</td>\n<td>true</td>\n<td>true</td>\n<td>true</td>\n<td>false</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 逻辑与 一假则假</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> &amp;&amp; <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">false</span> &amp;&amp; <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> &lt; <span class=\"number\">5</span> &amp;&amp; <span class=\"number\">3</span> &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span> &lt; <span class=\"number\">5</span> &amp;&amp; <span class=\"number\">3</span> &lt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 逻辑或 一真则真</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> || <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">false</span> || <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">false</span> || <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 逻辑非  取反</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num &gt; <span class=\"number\">5</span> &amp;&amp; num &lt; <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运算符优先级\"><a href=\"#运算符优先级\" class=\"headerlink\" title=\"运算符优先级\"></a>运算符优先级</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>逻辑运算符优先级： ！&gt; &amp;&amp; &gt;  ||  </p></blockquote>\n<h2 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h2><h3 id=\"表达式和语句\"><a href=\"#表达式和语句\" class=\"headerlink\" title=\"表达式和语句\"></a>表达式和语句</h3><p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/1671017924981.png\" alt=\"67101792498\"></p>\n<h3 id=\"分支语句\"><a href=\"#分支语句\" class=\"headerlink\" title=\"分支语句\"></a>分支语句</h3><p>分支语句可以根据条件判定真假，来选择性的执行想要的代码</p>\n<p>分支语句包含：</p>\n<ol>\n<li>if分支语句（重点）</li>\n<li>三元运算符</li>\n<li>switch语句</li>\n</ol>\n<h4 id=\"if-分支语句\"><a href=\"#if-分支语句\" class=\"headerlink\" title=\"if 分支语句\"></a>if 分支语句</h4><p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件表达式) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 满足条件要执行的语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>小括号内的条件结果是布尔值，为 true 时，进入大括号里执行代码；为false，则不执行大括号里面代码</p>\n<p>小括号内的结果若不是布尔类型时，会发生类型转换为布尔值，类似Boolean()</p>\n<p>如果大括号只有一个语句，大括号可以省略，但是，俺们不提倡这么做~</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单分支语句</span></span><br><span class=\"line\"><span class=\"comment\">// if (false) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// if (3 &gt; 5) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// if (2 === &#x27;2&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//  1. 除了0 所有的数字都为真</span></span><br><span class=\"line\"><span class=\"comment\">//   if (0) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 2.除了 &#x27;&#x27; 所有的字符串都为真 true</span></span><br><span class=\"line\"><span class=\"comment\">// if (&#x27;pink老师&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// if (&#x27;&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// // if (&#x27;&#x27;) console.log(&#x27;执行语句&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 用户输入</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> score = +<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入成绩&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 2. 进行判断输出</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">700</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;恭喜考入黑马程序员&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;-----------------&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if双分支语句\"><a href=\"#if双分支语句\" class=\"headerlink\" title=\"if双分支语句\"></a>if双分支语句</h4><p>如果有两个条件的时候，可以使用 if else 双分支语句</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (条件表达式)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 满足条件要执行的语句</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不满足条件要执行的语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 用户输入</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> uname = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入用户名:&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> pwd = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入密码:&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 2. 判断输出</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (uname === <span class=\"string\">&#x27;pink&#x27;</span> &amp;&amp; pwd === <span class=\"string\">&#x27;123456&#x27;</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;恭喜登录成功&#x27;</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;用户名或者密码错误&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if-多分支语句\"><a href=\"#if-多分支语句\" class=\"headerlink\" title=\"if 多分支语句\"></a>if 多分支语句</h4><p>使用场景： 适合于有多个条件的时候</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 用户输入</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> score = +<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入成绩：&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 2. 判断输出</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩优秀，宝贝，你是我的骄傲&#x27;</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">70</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩良好，宝贝，你要加油哦~~&#x27;</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩及格，宝贝，你很危险~&#x27;</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;成绩不及格，宝贝，我不想和你说话，我只想用鞭子和你说话~&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"三元运算符（三元表达式）\"><a href=\"#三元运算符（三元表达式）\" class=\"headerlink\" title=\"三元运算符（三元表达式）\"></a>三元运算符（三元表达式）</h4><p><strong>使用场景</strong>： 一些简单的双分支，可以使用  三元运算符（三元表达式），写起来比 if  else双分支 更简单</p>\n<p><strong>符号</strong>：? 与 : 配合使用</p>\n<p>语法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">条件 ? 表达式<span class=\"number\">1</span> ： 表达式<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 三元运算符（三元表达式）</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 语法格式</span></span><br><span class=\"line\"><span class=\"comment\">// 条件 ? 表达式1 : 表达式2 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 执行过程 </span></span><br><span class=\"line\"><span class=\"comment\">// 2.1 如果条件为真，则执行表达式1</span></span><br><span class=\"line\"><span class=\"comment\">// 2.2 如果条件为假，则执行表达式2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. 验证</span></span><br><span class=\"line\"><span class=\"comment\">// 5 &gt; 3 ? &#x27;真的&#x27; : &#x27;假的&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">5</span> &lt; <span class=\"number\">3</span> ? <span class=\"string\">&#x27;真的&#x27;</span> : <span class=\"string\">&#x27;假的&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let age = 18 </span></span><br><span class=\"line\"><span class=\"comment\">// age = age + 1</span></span><br><span class=\"line\"><span class=\"comment\">//  age++</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 用户输入 </span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请您输入一个数字:&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 2. 判断输出- 小于10才补0</span></span><br><span class=\"line\"><span class=\"comment\">// num = num &lt; 10 ? 0 + num : num</span></span><br><span class=\"line\">num = num &gt;= <span class=\"number\">10</span> ? num : <span class=\"number\">0</span> + num</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(num)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"switch语句（了解）\"><a href=\"#switch语句（了解）\" class=\"headerlink\" title=\"switch语句（了解）\"></a>switch语句（了解）</h4><p>使用场景： 适合于有多个条件的时候，也属于分支语句，大部分情况下和 if多分支语句 功能相同</p>\n<p>注意：</p>\n<ol>\n<li>switch case语句一般用于等值判断, if适合于区间判断</li>\n<li>switchcase一般需要配合break关键字使用 没有break会造成case穿透</li>\n<li>if 多分支语句开发要比switch更重要，使用也更多</li>\n</ol>\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// switch分支语句</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 语法</span></span><br><span class=\"line\"><span class=\"comment\">// switch (表达式) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   case 值1:</span></span><br><span class=\"line\"><span class=\"comment\">//     代码1</span></span><br><span class=\"line\"><span class=\"comment\">//     break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//   case 值2:</span></span><br><span class=\"line\"><span class=\"comment\">//     代码2</span></span><br><span class=\"line\"><span class=\"comment\">//     break</span></span><br><span class=\"line\"><span class=\"comment\">//   ...</span></span><br><span class=\"line\"><span class=\"comment\">//   default:</span></span><br><span class=\"line\"><span class=\"comment\">//     代码n</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;您选择的是1&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">break</span>  <span class=\"comment\">// 退出switch</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;您选择的是2&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">break</span>  <span class=\"comment\">// 退出switch</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;您选择的是3&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">break</span>  <span class=\"comment\">// 退出switch</span></span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;没有符合条件的&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"断点调试\"><a href=\"#断点调试\" class=\"headerlink\" title=\"断点调试\"></a>断点调试</h4><p><strong>作用：</strong>学习时可以帮助更好的理解代码运行，工作时可以更快找到bug</p>\n<p>浏览器打开调试界面</p>\n<ol>\n<li>按F12打开开发者工具</li>\n<li>点到源代码一栏 （ sources ）</li>\n<li>选择代码文件</li>\n</ol>\n<p><strong>断点：</strong>在某句代码上加的标记就叫断点，当程序执行到这句有标记的代码时会暂停下来</p>\n<h3 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h3><p>使用场景：重复执行 指定的一段代码，比如我们想要输出10次 ‘我学的很棒’</p>\n<p>学习路径：</p>\n<p>1.while循环</p>\n<p>2.for 循环（重点）</p>\n<h4 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h4><p>while :  在…. 期间， 所以 while循环 就是在满足条件期间，重复执行某些代码。</p>\n<p><strong>语法：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (条件表达式) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 循环体    </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// while循环: 重复执行代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 需求: 利用循环重复打印3次 &#x27;月薪过万不是梦，毕业时候见英雄&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;月薪过万不是梦，毕业时候见英雄~&lt;br&gt;&#x27;</span>)</span><br><span class=\"line\">  i++   <span class=\"comment\">// 这里千万不要忘了变量自增否则造成死循环</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>循环三要素：</p>\n<p>1.初始值 （经常用变量）</p>\n<p>2.终止条件</p>\n<p>3.变量的变化量</p>\n<p>例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// // 1. 变量的起始值</span></span><br><span class=\"line\">  <span class=\"comment\">// let i = 1</span></span><br><span class=\"line\">  <span class=\"comment\">// // 2. 终止条件</span></span><br><span class=\"line\">  <span class=\"comment\">// while (i &lt;= 3) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   document.write(&#x27;我要循环三次 &lt;br&gt;&#x27;)</span></span><br><span class=\"line\">  <span class=\"comment\">//   // 3. 变量的变化量</span></span><br><span class=\"line\">  <span class=\"comment\">//   i++</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// 1. 变量的起始值</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> end = +<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入次数:&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 终止条件</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (i &lt;= end) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;我要循环三次 &lt;br&gt;&#x27;</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 3. 变量的变化量</span></span><br><span class=\"line\">  i++</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"中止循环\"><a href=\"#中止循环\" class=\"headerlink\" title=\"中止循环\"></a>中止循环</h4><p><code>break</code>   中止整个循环，一般用于结果已经得到, 后续的循环不需要的时候可以使用（提高效率）  </p>\n<p><code>continue</code>  中止本次循环，一般用于排除或者跳过某一个选项的时候</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let i = 1</span></span><br><span class=\"line\"><span class=\"comment\">// while (i &lt;= 5) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(i)</span></span><br><span class=\"line\"><span class=\"comment\">//   if (i === 3) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     break  // 退出循环</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//   i++</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (i &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    i++</span><br><span class=\"line\">    <span class=\"keyword\">continue</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">  i++</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"无限循环\"><a href=\"#无限循环\" class=\"headerlink\" title=\"无限循环\"></a>无限循环</h4><p>1.while(true) 来构造“无限”循环，需要使用break退出循环。（常用）</p>\n<p>2.for(;;) 也可以来构造“无限”循环，同样需要使用break退出循环。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 无限循环  </span></span><br><span class=\"line\"><span class=\"comment\">// 需求： 页面会一直弹窗询问你爱我吗？</span></span><br><span class=\"line\"><span class=\"comment\">// (1). 如果用户输入的是 &#x27;爱&#x27;，则退出弹窗</span></span><br><span class=\"line\"><span class=\"comment\">// (2). 否则一直弹窗询问</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. while(true) 无限循环</span></span><br><span class=\"line\"><span class=\"comment\">// while (true) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   let love = prompt(&#x27;你爱我吗?&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//   if (love === &#x27;爱&#x27;) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     break</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. for(;;) 无限循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (; ;) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> love = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;你爱我吗?&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (love === <span class=\"string\">&#x27;爱&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"综合案例-ATM存取款机\"><a href=\"#综合案例-ATM存取款机\" class=\"headerlink\" title=\"综合案例-ATM存取款机\"></a>综合案例-ATM存取款机</h2><p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/1671018781557.png\" alt=\"67101878155\"></p>\n<p>分析：</p>\n<p>①：提示输入框写到循环里面（无限循环）</p>\n<p>②：用户输入4则退出循环 break</p>\n<p>③：提前准备一个金额预先存储一个数额 money</p>\n<p>④：根据输入不同的值，做不同的操作</p>\n<p>​     (1)  取钱则是减法操作， 存钱则是加法操作，查看余额则是直接显示金额</p>\n<p>​     (2) 可以使用 if else if 多分支 来执行不同的操作</p>\n<p>完整代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 1. 开始循环 输入框写到 循环里面</span></span><br><span class=\"line\">  <span class=\"comment\">// 3. 准备一个总的金额</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> money = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> re = +<span class=\"title function_\">prompt</span>(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">请您选择操作：</span></span><br><span class=\"line\"><span class=\"string\">1.存钱</span></span><br><span class=\"line\"><span class=\"string\">2.取钱</span></span><br><span class=\"line\"><span class=\"string\">3.查看余额</span></span><br><span class=\"line\"><span class=\"string\">4.退出</span></span><br><span class=\"line\"><span class=\"string\">`</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 2. 如果用户输入的 4 则退出循环， break  写到if 里面，没有写到switch里面， 因为4需要break退出循环</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (re === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 4. 根据输入做操作</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (re) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">      <span class=\"comment\">// 存钱</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> cun = +<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入存款金额&#x27;</span>)</span><br><span class=\"line\">      money = money + cun</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">      <span class=\"comment\">// 存钱</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> qu = +<span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入取款金额&#x27;</span>)</span><br><span class=\"line\">      money = money - qu</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">      <span class=\"comment\">// 存钱</span></span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(<span class=\"string\">`您的银行卡余额是<span class=\"subst\">$&#123;money&#125;</span>`</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"if-多分支语句和-switch的区别\"><a href=\"#if-多分支语句和-switch的区别\" class=\"headerlink\" title=\"if 多分支语句和 switch的区别\"></a>if 多分支语句和 switch的区别</h2><ol>\n<li><p>共同点</p>\n<ul>\n<li>都能实现多分支选择， 多选1 </li>\n<li>大部分情况下可以互换</li>\n</ul>\n</li>\n<li><p>区别：</p>\n<ul>\n<li>switch…case语句通常处理case为比较<strong>确定值</strong>的情况，而if…else…语句更加灵活，通常用于<strong>范围判断</strong>(大于，等于某个范围)。</li>\n<li>switch 语句进行判断后直接执行到程序的语句，效率更高，而if…else语句有几种判断条件，就得判断多少次</li>\n<li>switch 一定要注意 必须是 &#x3D;&#x3D;&#x3D;  全等，一定注意 数据类型，同时注意break否则会有穿透效果</li>\n<li>结论：<ul>\n<li>当分支比较少时，if…else语句执行效率高。</li>\n<li>当分支比较多时，switch语句执行效率高，而且结构更清晰。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"for-语句\"><a href=\"#for-语句\" class=\"headerlink\" title=\"for 语句\"></a>for 语句</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>掌握 for 循环语句，让程序具备重复执行能力</p></blockquote>\n<p><code>for</code> 是 JavaScript 提供的另一种循环控制的话句，它和 <code>while</code> 只是语法上存在差异。</p>\n<h3 id=\"for语句的基本使用\"><a href=\"#for语句的基本使用\" class=\"headerlink\" title=\"for语句的基本使用\"></a>for语句的基本使用</h3><ol>\n<li>实现循环的 3 要素</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 语法格式</span></span><br><span class=\"line\"><span class=\"comment\">// for(起始值; 终止条件; 变化量) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   // 要重复执行的代码</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 示例：在网页中输入标题标签</span></span><br><span class=\"line\"><span class=\"comment\">// 起始值为 1</span></span><br><span class=\"line\"><span class=\"comment\">// 变化量 i++</span></span><br><span class=\"line\"><span class=\"comment\">// 终止条件 i &lt;= 6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;h<span class=\"subst\">$&#123;i&#125;</span>&gt;循环控制，即重复执行&lt;h<span class=\"subst\">$&#123;i&#125;</span>&gt;`</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>变化量和死循环，<code>for</code> 循环和 <code>while</code> 一样，如果不合理设置增量和终止条件，便会产生死循环。</p>\n</li>\n<li><p>跳出和终止循环</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. continue </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>  <span class=\"comment\">// 结束本次循环，继续下一次循环</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2. break</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>  <span class=\"comment\">// 退出结束整个循环</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>结论：</p>\n<ul>\n<li><code>JavaScript</code> 提供了多种语句来实现循环控制，但无论使用哪种语句都离不开循环的3个特征，即起始值、变化量、终止条件，做为初学者应着重体会这3个特征，不必过多纠结三种语句的区别。</li>\n<li>起始值、变化量、终止条件，由开发者根据逻辑需要进行设计，规避死循环的发生。</li>\n<li>当如果明确了循环的次数的时候推荐使用<code>for</code>循环,当不明确循环的次数的时候推荐使用<code>while</code>循环</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：<code>for</code> 的语法结构更简洁，故 <code>for</code> 循环的使用频次会更多。</p></blockquote>\n<h3 id=\"循环嵌套\"><a href=\"#循环嵌套\" class=\"headerlink\" title=\"循环嵌套\"></a>循环嵌套</h3><p>利用循环的知识来对比一个简单的天文知识，我们知道地球在自转的同时也在围绕太阳公转，如果把自转和公转都看成是循环的话，就相当于是循环中又嵌套了另一个循环。</p>\n<p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/universe.gif\" alt=\"universe\"></p>\n<p>实际上 JavaScript 中任何一种循环语句都支持循环的嵌套，如下代码所示：</p>\n<p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/1647918261399.png\" alt=\"64791826139\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 外面的循环 记录第n天 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`第<span class=\"subst\">$&#123;i&#125;</span>天 &lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 2. 里层的循环记录 几个单词</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">6</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`记住第<span class=\"subst\">$&#123;j&#125;</span>个单词&lt;br&gt;`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>记住，外层循环循环一次，里层循环循环全部</p>\n<h4 id=\"倒三角\"><a href=\"#倒三角\" class=\"headerlink\" title=\"倒三角\"></a>倒三角</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// 外层打印几行</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 里层打印几个星星</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;★&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/1647918678956.png\" alt=\"64791867895\"></p>\n<h4 id=\"九九乘法表\"><a href=\"#九九乘法表\" class=\"headerlink\" title=\"九九乘法表\"></a>九九乘法表</h4><p>样式css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid pink;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">2px</span> <span class=\"number\">2px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">192</span>, <span class=\"number\">203</span>, .<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">192</span>, <span class=\"number\">203</span>, .<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: hotpink;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>javascript </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// 外层打印几行</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 里层打印几个星星</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 只需要吧 ★ 换成  1 x 1 = 1   </span></span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">\t\t&lt;div&gt; <span class=\"subst\">$&#123;j&#125;</span> x <span class=\"subst\">$&#123;i&#125;</span> = <span class=\"subst\">$&#123;j * i&#125;</span> &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">     `</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/1647918734677.png\" alt=\"64791873467\"></p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道什么是数组及其应用的场景，掌握数组声明及访问的语法。</p></blockquote>\n<h3 id=\"数组是什么？\"><a href=\"#数组是什么？\" class=\"headerlink\" title=\"数组是什么？\"></a>数组是什么？</h3><p><strong>数组：</strong>(Array)是一种可以按顺序保存数据的数据类型</p>\n<p><strong>使用场景：</strong>如果有多个数据可以用数组保存起来，然后放到一个变量中，管理非常方便</p>\n<h3 id=\"数组的基本使用\"><a href=\"#数组的基本使用\" class=\"headerlink\" title=\"数组的基本使用\"></a>数组的基本使用</h3><h4 id=\"定义数组和数组单元\"><a href=\"#定义数组和数组单元\" class=\"headerlink\" title=\"定义数组和数组单元\"></a>定义数组和数组单元</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 1. 语法，使用 [] 来定义一个空数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 定义一个空数组，然后赋值给变量 classes</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// let classes = [];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 2. 定义非空数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> classes = [<span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"string\">&#x27;小刚&#x27;</span>, <span class=\"string\">&#x27;小红&#x27;</span>, <span class=\"string\">&#x27;小丽&#x27;</span>, <span class=\"string\">&#x27;小米&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过 <code>[]</code> 定义数组，数据中可以存放真正的数据，如小明、小刚、小红等这些都是数组中的数据，我们这些数据称为数组单元，数组单元之间使用英文逗号分隔。</p>\n<h4 id=\"访问数组和数组索引\"><a href=\"#访问数组和数组索引\" class=\"headerlink\" title=\"访问数组和数组索引\"></a>访问数组和数组索引</h4><p>使用数组存放数据并不是最终目的，关键是能够随时的访问到数组中的数据（单元）。其实 JavaScript 为数组中的每一个数据单元都编了号，通过数据单元在数组中的编号便可以轻松访问到数组中的数据单元了。</p>\n<p>我们将数据单元在数组中的编号称为索引值，也有人称其为下标。</p>\n<p>索引值实际是按着数据单元在数组中的位置依次排列的，注意是从<code> 0</code> 开始的，如下图所示：</p>\n<p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/array.jpg\" alt=\"array\"></p>\n<p>观察上图可以数据单元【小明】对应的索引值为【0】，数据单元【小红】对应的索引值为【2】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> classes = [<span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"string\">&#x27;小刚&#x27;</span>, <span class=\"string\">&#x27;小红&#x27;</span>, <span class=\"string\">&#x27;小丽&#x27;</span>, <span class=\"string\">&#x27;小米&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 访问数组，语法格式为：变量名[索引值]</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(classes[<span class=\"number\">0</span>]) <span class=\"comment\">// 结果为：小明</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(classes[<span class=\"number\">1</span>]) <span class=\"comment\">// 结果为：小刚</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(classes[<span class=\"number\">4</span>]) <span class=\"comment\">// 结果为：小米</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 通过索引值还可以为数组单重新赋值</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(classes[<span class=\"number\">3</span>]) <span class=\"comment\">// 结果为：小丽</span></span><br><span class=\"line\"><span class=\"comment\">// 重新为索引值为 3 的单元赋值</span></span><br><span class=\"line\">classes[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;小小丽&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">wirte</span>(classes[<span class=\"number\">3</span>]); <span class=\"comment\">// 结果为： 小小丽</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据单元值类型\"><a href=\"#数据单元值类型\" class=\"headerlink\" title=\"数据单元值类型\"></a>数据单元值类型</h4><p>数组做为数据的集合，它的单元值可以是任意数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 6. 数组单值类型可以是任意数据类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// a) 数组单元值的类型为字符类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"string\">&#x27;HTML&#x27;</span>, <span class=\"string\">&#x27;CSS&#x27;</span>, <span class=\"string\">&#x27;JavaScript&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\">// b) 数组单元值的类型为数值类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> scores = [<span class=\"number\">78</span>, <span class=\"number\">84</span>, <span class=\"number\">70</span>, <span class=\"number\">62</span>, <span class=\"number\">75</span>]</span><br><span class=\"line\"><span class=\"comment\">// c) 混合多种类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mixin = [<span class=\"literal\">true</span>, <span class=\"number\">1</span>, <span class=\"literal\">false</span>, <span class=\"string\">&#x27;hello&#x27;</span>]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数组长度属性\"><a href=\"#数组长度属性\" class=\"headerlink\" title=\"数组长度属性\"></a>数组长度属性</h4><p>重申一次，数组在 JavaScript 中并不是新的数据类型，它属于对象类型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;html&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>, <span class=\"string\">&#x27;javascript&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\">// 数组对应着一个 length 属性，它的含义是获取数组的长度</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"property\">length</span>) <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"操作数组\"><a href=\"#操作数组\" class=\"headerlink\" title=\"操作数组\"></a>操作数组</h3><p>数组做为对象数据类型，不但有 <code>length</code> 属性可以使用，还提供了许多方法：</p>\n<ol>\n<li>push 动态向数组的尾部添加一个单元</li>\n<li>unshit 动态向数组头部添加一个单元</li>\n<li>pop 删除最后一个单元</li>\n<li>shift 删除第一个单元</li>\n<li>splice 动态删除任意单元</li>\n</ol>\n<p>使用以上4个方法时，都是直接在原数组上进行操作，即成功调任何一个方法，原数组都跟着发生相应的改变。并且在添加或删除单元时 <code>length</code> 并不会发生错乱。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;html&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>, <span class=\"string\">&#x27;javascript&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. push 动态向数组的尾部添加一个单元</span></span><br><span class=\"line\">arr.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;Nodejs&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)</span><br><span class=\"line\">arr.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;Vue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. unshit 动态向数组头部添加一个单元</span></span><br><span class=\"line\">arr.<span class=\"title function_\">unshift</span>(<span class=\"string\">&#x27;VS Code&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. splice 动态删除任意单元</span></span><br><span class=\"line\">arr.<span class=\"title function_\">splice</span>(<span class=\"number\">2</span>, <span class=\"number\">1</span>) <span class=\"comment\">// 从索引值为2的位置开始删除1个单元</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4. pop 删除最后一个单元</span></span><br><span class=\"line\">arr.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5. shift 删除第一个单元</span></span><br><span class=\"line\">arr.<span class=\"title function_\">shift</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>理解函数的封装特性，掌握函数的语法规则</p></blockquote>\n<h3 id=\"声明和调用\"><a href=\"#声明和调用\" class=\"headerlink\" title=\"声明和调用\"></a>声明和调用</h3><p>函数可以把具有相同或相似逻辑的代码“包裹”起来，通过函数调用执行这些被“包裹”的代码逻辑，这么做的优势是有利于精简代码方便复用。</p>\n<h4 id=\"声明（定义）\"><a href=\"#声明（定义）\" class=\"headerlink\" title=\"声明（定义）\"></a>声明（定义）</h4><p>声明（定义）一个完整函数包括关键字、函数名、形式参数、函数体、返回值5个部分</p>\n<p><img src=\"/images/JavaScript%E5%9F%BA%E7%A1%80/assets/function.jpg\" alt=\"function\"></p>\n<h4 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h4><p>声明（定义）的函数必须调用才会真正被执行，使用 <code>()</code> 调用函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明（定义）了最简单的函数，既没有形式参数，也没有返回值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;嗨~&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 函数调用，这些函数体内的代码逻辑会被执行</span></span><br><span class=\"line\"><span class=\"comment\">// 函数名()</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br><span class=\"line\"><span class=\"comment\">// 可以重复被调用，多少次都可以</span></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：函数名的命名规则与变量是一致的，并且尽量保证函数名的语义。</p></blockquote>\n<p>小案例： 小星星</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// document.write(&#x27;hai~&#x27;)</span></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`*&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`**&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`***&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`****&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`*****&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`******&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`*******&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`********&lt;br&gt;`</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`*********&lt;br&gt;`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 函数调用</span></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>通过向函数传递参数，可以让函数更加灵活多变，参数可以理解成是一个变量。</p>\n<p>声明（定义）一个功能为打招呼的函数</p>\n<ul>\n<li>传入数据列表</li>\n<li>声明这个函数需要传入几个数据</li>\n<li>多个数据用逗号隔开</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明（定义）一个功能为打招呼的函数</span></span><br><span class=\"line\"><span class=\"comment\">// function sayHi() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(&#x27;嗨~&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 调用函数</span></span><br><span class=\"line\"><span class=\"comment\">// sayHi()</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个函数似乎没有什么价值，除非能够向不同的人打招呼</span></span><br><span class=\"line\"><span class=\"comment\">// 这就需要借助参数来实现了</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 参数 name 可以被理解成是一个变量</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;嗨~&#x27;</span> + name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用 sayHi 函数，括号中多了 &#x27;小明&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 这时相当于为参数 name 赋值了</span></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小明&#x27;</span>)<span class=\"comment\">// 结果为 小明</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 再次调用 sayHi 函数，括号中多了 &#x27;小红&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 这时相当于为参数 name 赋值了</span></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小红&#x27;</span>) <span class=\"comment\">// 结果为 小红</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>声明（定义）函数时的形参没有数量限制，当有多个形参时使用 <code>,</code> 分隔</li>\n<li>调用函数传递的实参要与形参的顺序一致</li>\n</ol>\n<h4 id=\"形参和实参\"><a href=\"#形参和实参\" class=\"headerlink\" title=\"形参和实参\"></a>形参和实参</h4><p>形参：声明函数时写在函数名右边小括号里的叫形参（形式上的参数）</p>\n<p>实参：调用函数时写在函数名右边小括号里的叫实参（实际上的参数）</p>\n<p>形参可以理解为是在这个函数内声明的变量（比如 num1 &#x3D; 10）实参可以理解为是给这个变量赋值</p>\n<p>开发中尽量保持形参和实参个数一致</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明（定义）一个计算任意两数字和的函数</span></span><br><span class=\"line\"><span class=\"comment\">// 形参 x 和 y 分别表示任意两个数字，它们是两个变量</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">count</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x + y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用函数，传入两个具体的数字做为实参</span></span><br><span class=\"line\"><span class=\"comment\">// 此时 10 赋值给了形参 x</span></span><br><span class=\"line\"><span class=\"comment\">// 此时 5  赋值给了形参 y</span></span><br><span class=\"line\"><span class=\"title function_\">count</span>(<span class=\"number\">10</span>, <span class=\"number\">5</span>); <span class=\"comment\">// 结果为 15</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h3><p>函数的本质是封装（包裹），函数体内的逻辑执行完毕后，函数外部如何获得函数内部的执行结果呢？要想获得函数内部逻辑的执行结果，需要通过 <code>return</code> 这个关键字，将内部执行结果传递到函数外部，这个被传递到外部的结果就是返回值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义求和函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">count</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> s = a + b</span><br><span class=\"line\">  <span class=\"comment\">// s 即为 a + b 的结果</span></span><br><span class=\"line\">  <span class=\"comment\">// 通过 return 将 s 传递到外部</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用函数，如果一个函数有返回值</span></span><br><span class=\"line\"><span class=\"comment\">// 那么可将这个返回值赋值给外部的任意变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> total = <span class=\"title function_\">count</span>(<span class=\"number\">5</span>, <span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>在函数体中使用return 关键字能将内部的执行结果交给函数外部使用</li>\n<li>函数内部只能出现1 次 return，并且 return 下一行代码不会再被执行，所以return 后面的数据不要换行写</li>\n<li>return会立即结束当前函数</li>\n<li>函数可以没有return，这种情况默认返回值为 undefined</li>\n</ol>\n<h3 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h3><p>通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。</p>\n<p>作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。</p>\n<h4 id=\"全局作用域\"><a href=\"#全局作用域\" class=\"headerlink\" title=\"全局作用域\"></a>全局作用域</h4><p>作用于所有代码执行的环境(整个 script 标签内部)或者一个独立的 js 文件</p>\n<p>处于全局作用域内的变量，称为全局变量</p>\n<h4 id=\"局部作用域\"><a href=\"#局部作用域\" class=\"headerlink\" title=\"局部作用域\"></a>局部作用域</h4><p>作用于函数内的代码环境，就是局部作用域。 因为跟函数有关系，所以也称为函数作用域。</p>\n<p>处于局部作用域内的变量称为局部变量</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果函数内部，变量没有声明，直接赋值，也当全局变量看，但是强烈不推荐</p>\n<p>但是有一种情况，函数内部的形参可以看做是局部变量。</p></blockquote>\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><p>函数可以分为具名函数和匿名函数</p>\n<p>匿名函数：没有名字的函数,无法直接使用。</p>\n<h4 id=\"函数表达式\"><a href=\"#函数表达式\" class=\"headerlink\" title=\"函数表达式\"></a>函数表达式</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fn = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;函数表达式&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\"><span class=\"title function_\">fn</span>()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"立即执行函数\"><a href=\"#立即执行函数\" class=\"headerlink\" title=\"立即执行函数\"></a>立即执行函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; xxx  &#125;)();</span><br><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;xxxx&#125;());</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>无需调用，立即执行，其实本质已经调用了</p>\n<p>多个立即执行函数之间用分号隔开</p></blockquote>\n<p>​\t\t在能够访问到的情况下 先局部 局部没有在找全局</p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对象是 JavaScript 数据类型的一种，之前已经学习了数值类型、字符串类型、布尔类型、undefined。对象数据类型可以被理解成是一种数据集合。它由属性和方法两部分构成。</p></blockquote>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>声明一个对象类型的变量与之前声明一个数值或字符串类型的变量没有本质上的区别。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明字符串类型变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello world!&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明数值类型变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">199</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明对象类型变量，使用一对花括号</span></span><br><span class=\"line\"><span class=\"comment\">// user 便是一个对象了，目前它是一个空对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"属性和访问\"><a href=\"#属性和访问\" class=\"headerlink\" title=\"属性和访问\"></a>属性和访问</h3><p>数据描述性的信息称为属性，如人的姓名、身高、年龄、性别等，一般是名词性的。</p>\n<ol>\n<li>属性都是成 对出现的，包括属性名和值，它们之间使用英文 <code>:</code> 分隔</li>\n<li>多个属性之间使用英文 <code>,</code> 分隔</li>\n<li>属性就是依附在对象上的变量</li>\n<li>属性名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过对象描述一个人的数据信息</span></span><br><span class=\"line\"><span class=\"comment\">// person 是一个对象，它包含了一个属性 name</span></span><br><span class=\"line\"><span class=\"comment\">// 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"comment\">// 描述人的姓名</span></span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">18</span>, <span class=\"comment\">// 描述人的年龄</span></span><br><span class=\"line\">  <span class=\"attr\">stature</span>: <span class=\"number\">185</span>, <span class=\"comment\">// 描述人的身高</span></span><br><span class=\"line\">  <span class=\"attr\">gender</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"comment\">// 描述人的性别</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>声明对象，并添加了若干属性后，可以使用 <code>.</code> 或 <code>[]</code> 获得对象中属性对应的值，我称之为属性访问。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// 通过对象描述一个人的数据信息</span></span><br><span class=\"line\"> <span class=\"comment\">// person 是一个对象，它包含了一个属性 name</span></span><br><span class=\"line\"> <span class=\"comment\">// 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔</span></span><br><span class=\"line\"> <span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">   <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"comment\">// 描述人的姓名</span></span><br><span class=\"line\">   <span class=\"attr\">age</span>: <span class=\"number\">18</span>, <span class=\"comment\">// 描述人的年龄</span></span><br><span class=\"line\">   <span class=\"attr\">stature</span>: <span class=\"number\">185</span>, <span class=\"comment\">// 描述人的身高</span></span><br><span class=\"line\">   <span class=\"attr\">gender</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"comment\">// 描述人的性别</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">// 访问人的名字</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person.<span class=\"property\">name</span>) <span class=\"comment\">// 结果为 小明</span></span><br><span class=\"line\"> <span class=\"comment\">// 访问人性别</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person.<span class=\"property\">gender</span>) <span class=\"comment\">// 结果为 男</span></span><br><span class=\"line\"> <span class=\"comment\">// 访问人的身高</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person[<span class=\"string\">&#x27;stature&#x27;</span>]) <span class=\"comment\">// 结果为 185</span></span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(person.<span class=\"property\">stature</span>) <span class=\"comment\">// 结果同为 185</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展：也可以动态为对象添加属性，动态添加与直接定义是一样的，只是语法上更灵活。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 声明一个空的对象（没有任何属性）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">// 动态追加属性</span></span><br><span class=\"line\">   user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;小明&#x27;</span></span><br><span class=\"line\">   user[<span class=\"string\">&#x27;age&#x27;</span>] = <span class=\"number\">18</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 动态添加与直接定义是一样的，只是语法上更灵活</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法和调用\"><a href=\"#方法和调用\" class=\"headerlink\" title=\"方法和调用\"></a>方法和调用</h3><p>数据行为性的信息称为方法，如跑步、唱歌等，一般是动词性的，其本质是函数。</p>\n<ol>\n<li>方法是由方法名和函数两部分构成，它们之间使用 : 分隔</li>\n<li>多个属性之间使用英文 <code>,</code> 分隔</li>\n<li>方法是依附在对象中的函数</li>\n<li>方法名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法是依附在对象上的函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小红&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 方法是由方法名和函数两部分构成，它们之间使用 : 分隔</span></span><br><span class=\"line\">  <span class=\"attr\">singing</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;两只老虎，两只老虎，跑的快，跑的快...&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">run</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我跑的非常快...&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>声明对象，并添加了若干方法后，可以使用 <code>.</code> 或 <code>[]</code> 调用对象中函数，我称之为方法调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法是依附在对象上的函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小红&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 方法是由方法名和函数两部分构成，它们之间使用 : 分隔</span></span><br><span class=\"line\">  <span class=\"attr\">singing</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;两只老虎，两只老虎，跑的快，跑的快...&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">run</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我跑的非常快...&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用对象中 singing 方法</span></span><br><span class=\"line\">person.<span class=\"title function_\">singing</span>()</span><br><span class=\"line\"><span class=\"comment\">// 调用对象中的 run 方法</span></span><br><span class=\"line\">person.<span class=\"title function_\">run</span>()</span><br></pre></td></tr></table></figure>\n\n<p>扩展：也可以动态为对象添加方法，动态添加与直接定义是一样的，只是语法上更灵活。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 声明一个空的对象（没有任何属性，也没有任何方法）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">// 动态追加属性</span></span><br><span class=\"line\">   user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;小明&#x27;</span></span><br><span class=\"line\">   user.[<span class=\"string\">&#x27;age&#x27;</span>] = <span class=\"number\">18</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 动态添加方法</span></span><br><span class=\"line\">   user.<span class=\"property\">move</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;移动一点距离...&#x27;</span>)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：无论是属性或是方法，同一个对象中出现名称一样的，后面的会覆盖前面的。</strong></p>\n<h3 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h3><p>null 也是 JavaScript 中数据类型的一种，通常只用它来表示不存在的对象。使用 typeof 检测类型它的类型时，结果为 <code>object</code>。</p>\n<h4 id=\"遍历对象\"><a href=\"#遍历对象\" class=\"headerlink\" title=\"遍历对象\"></a>遍历对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;pink&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// k 属性名  字符串  带引号    obj.&#x27;uname&#x27;     k ===  &#x27;uname&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">// obj[k]  属性值    obj[&#x27;uname&#x27;]   obj[k]</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>for in 不提倡遍历数组 因为 k 是 字符串  </p>\n<h2 id=\"内置对象\"><a href=\"#内置对象\" class=\"headerlink\" title=\"内置对象\"></a>内置对象</h2><p>回想一下我们曾经使用过的 <code>console.log</code>，<code>console</code>其实就是 JavaScript 中内置的对象，该对象中存在一个方法叫 <code>log</code>，然后调用 <code>log</code> 这个方法，即 <code>console.log()</code>。</p>\n<p>除了 <code>console</code> 对象外，JavaScritp 还有其它的内置的对象</p>\n<h3 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h3><p><code>Math</code> 是 JavaScript 中内置的对象，称为数学对象，这个对象下即包含了属性，也包含了许多的方法。</p>\n<h4 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h4><ul>\n<li>Math.PI，获取圆周率</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 圆周率</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Math</span>.<span class=\"property\">PI</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><ul>\n<li>Math.random，生成 0 到 1 间的随机数</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 0 ~ 1 之间的随机数, 包含 0 不包含 1</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.ceil，数字向上取整</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 舍弃小数部分，整数部分加1</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(<span class=\"number\">3.4</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.floor，数字向下取整</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 舍弃小数部分，整数部分不变</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"number\">4.68</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.round，四舍五入取整</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 取整，四舍五入原则</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"number\">5.46539</span>)</span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(<span class=\"number\">4.849</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.max，在一组数中找出最大的</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 找出最大值</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"number\">10</span>, <span class=\"number\">21</span>, <span class=\"number\">7</span>, <span class=\"number\">24</span>, <span class=\"number\">13</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.min，在一组数中找出最小的</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 找出最小值</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"number\">24</span>, <span class=\"number\">18</span>, <span class=\"number\">6</span>, <span class=\"number\">19</span>, <span class=\"number\">21</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.pow，幂方法</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 求某个数的多少次方</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">4</span>, <span class=\"number\">2</span>) <span class=\"comment\">// 求 4 的 2 次方</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>) <span class=\"comment\">// 求 2 的 3 次方</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Math.sqrt，平方根</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 求某数的平方根</span></span><br><span class=\"line\"><span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure>\n\n<p>数学对象提供了比较多的方法，这里不要求强记，通过演示数学对象的使用，加深对对象的理解。</p>\n","text":"JavaScript基础的掌握对于现代Web开发至关重要。它是一种强大的编程语言，能够为网页添加交互性和动态性。了解JavaScript的基础知识是构建复杂应用程序和实现优化的用户体验的基础。无论是前端开发还是后端开发，掌握JavaScript基础都是成为一名出色开发者的必备技能。...","permalink":"/post/前端/JavaScript/JavaScript基础","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"计算机","slug":"计算机","count":8,"path":"api/categories/计算机.json"},{"name":"前端","slug":"计算机/前端","count":4,"path":"api/categories/计算机/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":12,"path":"api/tags/笔记.json"},{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JavaScript-%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">JavaScript 基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">引入方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%85%E9%83%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">内部方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E5%BD%A2%E5%BC%8F\"><span class=\"toc-text\">外部形式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%87%8A%E5%92%8C%E7%BB%93%E6%9D%9F%E7%AC%A6\"><span class=\"toc-text\">注释和结束符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">单行注释</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">多行注释</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9D%9F%E7%AC%A6\"><span class=\"toc-text\">结束符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E5%92%8C%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">输入和输出</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">输出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">输入</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">赋值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%90%8D%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99\"><span class=\"toc-text\">变量名命名规则</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">常量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数值类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">字符串类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">布尔类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#undefined\"><span class=\"toc-text\">undefined</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">类型转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">隐式转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">显式转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Number\"><span class=\"toc-text\">Number</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算术运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">赋值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%A2%9E-%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">自增&#x2F;自减运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">比较运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逻辑运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">运算符优先级</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">表达式和语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">分支语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if-%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if 分支语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if%E5%8F%8C%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if双分支语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if-%E5%A4%9A%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if 多分支语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">三元运算符（三元表达式）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#switch%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89\"><span class=\"toc-text\">switch语句（了解）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">断点调试</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">循环语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#while%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">while循环</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%AD%A2%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">中止循环</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A0%E9%99%90%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">无限循环</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B-ATM%E5%AD%98%E5%8F%96%E6%AC%BE%E6%9C%BA\"><span class=\"toc-text\">综合案例-ATM存取款机</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#if-%E5%A4%9A%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5%E5%92%8C-switch%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">if 多分支语句和 switch的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#for-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">for 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">for语句的基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97\"><span class=\"toc-text\">循环嵌套</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%80%92%E4%B8%89%E8%A7%92\"><span class=\"toc-text\">倒三角</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8\"><span class=\"toc-text\">九九乘法表</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">数组是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">数组的基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E6%95%B0%E7%BB%84%E5%92%8C%E6%95%B0%E7%BB%84%E5%8D%95%E5%85%83\"><span class=\"toc-text\">定义数组和数组单元</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84%E5%92%8C%E6%95%B0%E7%BB%84%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">访问数组和数组索引</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%8D%95%E5%85%83%E5%80%BC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据单元值类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">数组长度属性</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">操作数组</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E%E5%92%8C%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">声明和调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E%EF%BC%88%E5%AE%9A%E4%B9%89%EF%BC%89\"><span class=\"toc-text\">声明（定义）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">调用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BD%A2%E5%8F%82%E5%92%8C%E5%AE%9E%E5%8F%82\"><span class=\"toc-text\">形参和实参</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">返回值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">全局作用域</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">局部作用域</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">匿名函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">函数表达式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">立即执行函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%9E%E6%80%A7%E5%92%8C%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">属性和访问</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E5%92%8C%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">方法和调用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#null\"><span class=\"toc-text\">null</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">遍历对象</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">内置对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Math\"><span class=\"toc-text\">Math</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">属性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">方法</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"JavaScript-进阶笔记","uid":"19e12028a5359d260a4ec9c616f8a947","slug":"前端/JavaScript/JavaScript进阶","date":"2023-08-24T00:30:00.000Z","updated":"2023-09-11T10:29:00.990Z","comments":true,"path":"api/articles/前端/JavaScript/JavaScript进阶.json","keywords":null,"cover":"/images/cover/4.jpg","text":"JavaScript进阶的重要性在于深入理解语言的高级概念和技术，如闭包、原型链、异步编程等。这将使开发者能够编写更高效、可维护和可扩展的代码，解决复杂的问题，并应对日益增长的Web应用需求。进阶的JavaScript知识将提升开发者的技术能力和职业竞争力。...","permalink":"/post/前端/JavaScript/JavaScript进阶","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"24 mins."},"categories":[{"name":"计算机","slug":"计算机","count":8,"path":"api/categories/计算机.json"},{"name":"前端","slug":"计算机/前端","count":4,"path":"api/categories/计算机/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":12,"path":"api/tags/笔记.json"},{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/tags/JavaScript.json"}],"author":{"name":"Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Web APIs笔记","uid":"5dce2666999480e2fb451f13cc3dbea9","slug":"前端/Web-APIs/Web APIs","date":"2023-07-20T07:30:00.000Z","updated":"2023-09-11T10:42:55.952Z","comments":true,"path":"api/articles/前端/Web-APIs/Web APIs.json","keywords":null,"cover":"/images/cover/4.jpg","text":"📒 这篇笔记涵盖Web APIs 的重要性和使用技巧。了解HTTP通信、数据获取和操作。快来探索Web API的奇妙世界！","permalink":"/post/前端/Web-APIs/Web APIs","photos":[],"count_time":{"symbolsCount":"41k","symbolsTime":"38 mins."},"categories":[{"name":"计算机","slug":"计算机","count":8,"path":"api/categories/计算机.json"},{"name":"前端","slug":"计算机/前端","count":4,"path":"api/categories/计算机/前端.json"}],"tags":[{"name":"笔记","slug":"笔记","count":12,"path":"api/tags/笔记.json"},{"name":"Web APIs","slug":"Web-APIs","count":1,"path":"api/tags/Web-APIs.json"}],"author":{"name":"Honman","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"这家伙很坏 什么都没留下","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}